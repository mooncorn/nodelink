name: Deploy server to DigitalOcean

on:
  push:
    branches: [ main ]
    paths:
      - 'server/**'
    
    workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: do_production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.23.5'
      
      - name: Build server
        working-directory: ./server
        run: |
          GOOS=linux GOARCH=amd64 go build -o out cmd/server/main.go

      - name: Configure environment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            # Stop service
            sudo systemctl stop gshub.service
            rm -f /opt/gshub/out
            
            # Create environment file
            sudo tee /opt/gshub/.env > /dev/null << EOF
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            EOF
            
            # Set proper permissions
            sudo chown gshub:gshub /opt/gshub/.env
            sudo chmod 600 /opt/gshub/.env
      
      - name: Copy binary
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          source: "server/out"
          target: "/opt/gshub/"
          strip_components: 1
      
      - name: Start service
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            sudo chown gshub:gshub /opt/gshub/out
            sudo chmod +x /opt/gshub/out
            sudo systemctl start gshub.service
            sudo systemctl status gshub.service