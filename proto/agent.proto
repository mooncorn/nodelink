syntax = "proto3";

package pb;

option go_package = "github.com/mooncorn/nodelink/proto/pb";

service AgentService {
  rpc StreamCommunication(stream AgentMessage) returns (stream ServerMessage);
}

// Server to Agent messages
message ServerMessage {
  oneof message {
    Ping ping = 1;
    CommandRequest command_request = 2;
    TerminalCreateRequest terminal_create_request = 3;
    TerminalCommandRequest terminal_command_request = 4;
    TerminalCloseRequest terminal_close_request = 5;
  }
}

// Agent to Server messages
message AgentMessage {
  oneof message {
    Pong pong = 1;
    CommandResponse command_response = 2;
    TerminalCreateResponse terminal_create_response = 3;
    TerminalCommandResponse terminal_command_response = 4;
    TerminalCloseResponse terminal_close_response = 5;
  }
}

// Ping/Pong messages for heartbeat
message Ping {
  int64 timestamp = 1;
}

message Pong {
  int64 timestamp = 1;
  int64 ping_timestamp = 2;
}

// Command execution messages
message CommandRequest {
  string request_id = 1;
  string command = 2;
  repeated string args = 3;
  map<string, string> env = 4;
  string working_dir = 5;
  int32 timeout_seconds = 6;
}

message CommandResponse {
  string request_id = 1;
  int32 exit_code = 2;
  string stdout = 3;
  string stderr = 4;
  string error = 5;
  bool timeout = 6;
}

// Terminal session messages
message TerminalCreateRequest {
  string session_id = 1;
  string shell = 2; // bash, zsh, sh, etc. Default: bash
  string working_dir = 3;
  map<string, string> env = 4;
}

message TerminalCreateResponse {
  string session_id = 1;
  bool success = 2;
  string error = 3;
  string shell = 4;
  string working_dir = 5;
}

message TerminalCommandRequest {
  string session_id = 1;
  string command_id = 2;
  string command = 3;
}

message TerminalCommandResponse {
  string session_id = 1;
  string command_id = 2;
  string output = 3;
  string error = 4;
  bool is_final = 5; // true if command completed
  int32 exit_code = 6; // only set when is_final is true
}

message TerminalCloseRequest {
  string session_id = 1;
}

message TerminalCloseResponse {
  string session_id = 1;
  bool success = 2;
  string error = 3;
}
