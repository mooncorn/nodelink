// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.1
// source: event.proto

package eventstream

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventResponse_Status int32

const (
	EventResponse_UNKNOWN     EventResponse_Status = 0
	EventResponse_SUCCESS     EventResponse_Status = 1
	EventResponse_FAILURE     EventResponse_Status = 2
	EventResponse_IN_PROGRESS EventResponse_Status = 3
)

// Enum value maps for EventResponse_Status.
var (
	EventResponse_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "SUCCESS",
		2: "FAILURE",
		3: "IN_PROGRESS",
	}
	EventResponse_Status_value = map[string]int32{
		"UNKNOWN":     0,
		"SUCCESS":     1,
		"FAILURE":     2,
		"IN_PROGRESS": 3,
	}
)

func (x EventResponse_Status) Enum() *EventResponse_Status {
	p := new(EventResponse_Status)
	*p = x
	return p
}

func (x EventResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_event_proto_enumTypes[0].Descriptor()
}

func (EventResponse_Status) Type() protoreflect.EnumType {
	return &file_event_proto_enumTypes[0]
}

func (x EventResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventResponse_Status.Descriptor instead.
func (EventResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2, 0}
}

type ServerToNodeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	AgentId string `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// Types that are assignable to Task:
	//
	//	*ServerToNodeEvent_ShellExecute
	//	*ServerToNodeEvent_DockerOperation
	//	*ServerToNodeEvent_LogMessage
	Task isServerToNodeEvent_Task `protobuf_oneof:"task"`
}

func (x *ServerToNodeEvent) Reset() {
	*x = ServerToNodeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerToNodeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerToNodeEvent) ProtoMessage() {}

func (x *ServerToNodeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerToNodeEvent.ProtoReflect.Descriptor instead.
func (*ServerToNodeEvent) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

func (x *ServerToNodeEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ServerToNodeEvent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (m *ServerToNodeEvent) GetTask() isServerToNodeEvent_Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (x *ServerToNodeEvent) GetShellExecute() *ShellExecute {
	if x, ok := x.GetTask().(*ServerToNodeEvent_ShellExecute); ok {
		return x.ShellExecute
	}
	return nil
}

func (x *ServerToNodeEvent) GetDockerOperation() *DockerOperation {
	if x, ok := x.GetTask().(*ServerToNodeEvent_DockerOperation); ok {
		return x.DockerOperation
	}
	return nil
}

func (x *ServerToNodeEvent) GetLogMessage() *LogMessage {
	if x, ok := x.GetTask().(*ServerToNodeEvent_LogMessage); ok {
		return x.LogMessage
	}
	return nil
}

type isServerToNodeEvent_Task interface {
	isServerToNodeEvent_Task()
}

type ServerToNodeEvent_ShellExecute struct {
	ShellExecute *ShellExecute `protobuf:"bytes,3,opt,name=shell_execute,json=shellExecute,proto3,oneof"`
}

type ServerToNodeEvent_DockerOperation struct {
	DockerOperation *DockerOperation `protobuf:"bytes,4,opt,name=docker_operation,json=dockerOperation,proto3,oneof"`
}

type ServerToNodeEvent_LogMessage struct {
	LogMessage *LogMessage `protobuf:"bytes,5,opt,name=log_message,json=logMessage,proto3,oneof"`
}

func (*ServerToNodeEvent_ShellExecute) isServerToNodeEvent_Task() {}

func (*ServerToNodeEvent_DockerOperation) isServerToNodeEvent_Task() {}

func (*ServerToNodeEvent_LogMessage) isServerToNodeEvent_Task() {}

type NodeToServerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// Types that are assignable to Event:
	//
	//	*NodeToServerEvent_LogMessage
	//	*NodeToServerEvent_EventResponse
	Event isNodeToServerEvent_Event `protobuf_oneof:"event"`
}

func (x *NodeToServerEvent) Reset() {
	*x = NodeToServerEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeToServerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeToServerEvent) ProtoMessage() {}

func (x *NodeToServerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeToServerEvent.ProtoReflect.Descriptor instead.
func (*NodeToServerEvent) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{1}
}

func (x *NodeToServerEvent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (m *NodeToServerEvent) GetEvent() isNodeToServerEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *NodeToServerEvent) GetLogMessage() *LogMessage {
	if x, ok := x.GetEvent().(*NodeToServerEvent_LogMessage); ok {
		return x.LogMessage
	}
	return nil
}

func (x *NodeToServerEvent) GetEventResponse() *EventResponse {
	if x, ok := x.GetEvent().(*NodeToServerEvent_EventResponse); ok {
		return x.EventResponse
	}
	return nil
}

type isNodeToServerEvent_Event interface {
	isNodeToServerEvent_Event()
}

type NodeToServerEvent_LogMessage struct {
	LogMessage *LogMessage `protobuf:"bytes,2,opt,name=log_message,json=logMessage,proto3,oneof"`
}

type NodeToServerEvent_EventResponse struct {
	EventResponse *EventResponse `protobuf:"bytes,3,opt,name=event_response,json=eventResponse,proto3,oneof"`
}

func (*NodeToServerEvent_LogMessage) isNodeToServerEvent_Event() {}

func (*NodeToServerEvent_EventResponse) isNodeToServerEvent_Event() {}

type EventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string               `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Status  EventResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=eventstream.EventResponse_Status" json:"status,omitempty"`
	// Types that are assignable to Response:
	//
	//	*EventResponse_Update
	//	*EventResponse_Result
	Response isEventResponse_Response `protobuf_oneof:"response"`
}

func (x *EventResponse) Reset() {
	*x = EventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResponse) ProtoMessage() {}

func (x *EventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResponse.ProtoReflect.Descriptor instead.
func (*EventResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2}
}

func (x *EventResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EventResponse) GetStatus() EventResponse_Status {
	if x != nil {
		return x.Status
	}
	return EventResponse_UNKNOWN
}

func (m *EventResponse) GetResponse() isEventResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *EventResponse) GetUpdate() *EventResponseUpdate {
	if x, ok := x.GetResponse().(*EventResponse_Update); ok {
		return x.Update
	}
	return nil
}

func (x *EventResponse) GetResult() *EventResponseResult {
	if x, ok := x.GetResponse().(*EventResponse_Result); ok {
		return x.Result
	}
	return nil
}

type isEventResponse_Response interface {
	isEventResponse_Response()
}

type EventResponse_Update struct {
	Update *EventResponseUpdate `protobuf:"bytes,3,opt,name=update,proto3,oneof"`
}

type EventResponse_Result struct {
	Result *EventResponseResult `protobuf:"bytes,4,opt,name=result,proto3,oneof"`
}

func (*EventResponse_Update) isEventResponse_Response() {}

func (*EventResponse_Result) isEventResponse_Response() {}

type EventResponseUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *structpb.Struct `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EventResponseUpdate) Reset() {
	*x = EventResponseUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventResponseUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResponseUpdate) ProtoMessage() {}

func (x *EventResponseUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResponseUpdate.ProtoReflect.Descriptor instead.
func (*EventResponseUpdate) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{3}
}

func (x *EventResponseUpdate) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type EventResponseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *structpb.Struct `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EventResponseResult) Reset() {
	*x = EventResponseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventResponseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResponseResult) ProtoMessage() {}

func (x *EventResponseResult) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResponseResult.ProtoReflect.Descriptor instead.
func (*EventResponseResult) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{4}
}

func (x *EventResponseResult) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type EventResponseProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percent int32  `protobuf:"varint,1,opt,name=percent,proto3" json:"percent,omitempty"` // 0-100
	Detail  string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *EventResponseProgress) Reset() {
	*x = EventResponseProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventResponseProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResponseProgress) ProtoMessage() {}

func (x *EventResponseProgress) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResponseProgress.ProtoReflect.Descriptor instead.
func (*EventResponseProgress) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{5}
}

func (x *EventResponseProgress) GetPercent() int32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *EventResponseProgress) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type ShellExecute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd string `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
}

func (x *ShellExecute) Reset() {
	*x = ShellExecute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellExecute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellExecute) ProtoMessage() {}

func (x *ShellExecute) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellExecute.ProtoReflect.Descriptor instead.
func (*ShellExecute) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{6}
}

func (x *ShellExecute) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

type DockerOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Operation:
	//
	//	*DockerOperation_DockerRun
	//	*DockerOperation_DockerStart
	//	*DockerOperation_DockerStop
	//	*DockerOperation_DockerLogs
	Operation isDockerOperation_Operation `protobuf_oneof:"operation"`
}

func (x *DockerOperation) Reset() {
	*x = DockerOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerOperation) ProtoMessage() {}

func (x *DockerOperation) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerOperation.ProtoReflect.Descriptor instead.
func (*DockerOperation) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{7}
}

func (m *DockerOperation) GetOperation() isDockerOperation_Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

func (x *DockerOperation) GetDockerRun() *DockerRun {
	if x, ok := x.GetOperation().(*DockerOperation_DockerRun); ok {
		return x.DockerRun
	}
	return nil
}

func (x *DockerOperation) GetDockerStart() *DockerStart {
	if x, ok := x.GetOperation().(*DockerOperation_DockerStart); ok {
		return x.DockerStart
	}
	return nil
}

func (x *DockerOperation) GetDockerStop() *DockerStop {
	if x, ok := x.GetOperation().(*DockerOperation_DockerStop); ok {
		return x.DockerStop
	}
	return nil
}

func (x *DockerOperation) GetDockerLogs() *DockerLogs {
	if x, ok := x.GetOperation().(*DockerOperation_DockerLogs); ok {
		return x.DockerLogs
	}
	return nil
}

type isDockerOperation_Operation interface {
	isDockerOperation_Operation()
}

type DockerOperation_DockerRun struct {
	DockerRun *DockerRun `protobuf:"bytes,1,opt,name=docker_run,json=dockerRun,proto3,oneof"`
}

type DockerOperation_DockerStart struct {
	DockerStart *DockerStart `protobuf:"bytes,2,opt,name=docker_start,json=dockerStart,proto3,oneof"`
}

type DockerOperation_DockerStop struct {
	DockerStop *DockerStop `protobuf:"bytes,3,opt,name=docker_stop,json=dockerStop,proto3,oneof"`
}

type DockerOperation_DockerLogs struct {
	DockerLogs *DockerLogs `protobuf:"bytes,4,opt,name=docker_logs,json=dockerLogs,proto3,oneof"`
}

func (*DockerOperation_DockerRun) isDockerOperation_Operation() {}

func (*DockerOperation_DockerStart) isDockerOperation_Operation() {}

func (*DockerOperation_DockerStop) isDockerOperation_Operation() {}

func (*DockerOperation_DockerLogs) isDockerOperation_Operation() {}

type DockerRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Img string `protobuf:"bytes,1,opt,name=img,proto3" json:"img,omitempty"`
}

func (x *DockerRun) Reset() {
	*x = DockerRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerRun) ProtoMessage() {}

func (x *DockerRun) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerRun.ProtoReflect.Descriptor instead.
func (*DockerRun) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{8}
}

func (x *DockerRun) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

type DockerStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DockerStart) Reset() {
	*x = DockerStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerStart) ProtoMessage() {}

func (x *DockerStart) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerStart.ProtoReflect.Descriptor instead.
func (*DockerStart) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{9}
}

func (x *DockerStart) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DockerStop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DockerStop) Reset() {
	*x = DockerStop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerStop) ProtoMessage() {}

func (x *DockerStop) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerStop.ProtoReflect.Descriptor instead.
func (*DockerStop) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{10}
}

func (x *DockerStop) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DockerLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DockerLogs) Reset() {
	*x = DockerLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerLogs) ProtoMessage() {}

func (x *DockerLogs) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerLogs.ProtoReflect.Descriptor instead.
func (*DockerLogs) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{11}
}

func (x *DockerLogs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type LogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *LogMessage) Reset() {
	*x = LogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMessage) ProtoMessage() {}

func (x *LogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMessage.ProtoReflect.Descriptor instead.
func (*LogMessage) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{12}
}

func (x *LogMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_event_proto protoreflect.FileDescriptor

var file_event_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x54, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0d, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x5f, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x44,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0f, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3a, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x06, 0x0a,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0xb8, 0x01, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x6f,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0xab, 0x02, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x40, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53,
	0x10, 0x03, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42,
	0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x42, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x49, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x22, 0x20, 0x0a, 0x0c, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x22, 0x8e, 0x02, 0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x52, 0x75, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x75, 0x6e,
	0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x48, 0x00, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x3a, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x48, 0x00, 0x52,
	0x0a, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x64,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x44,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1d, 0x0a, 0x09, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x75,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x69, 0x6d, 0x67, 0x22, 0x1d, 0x0a, 0x0b, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x1c, 0x0a, 0x0a, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x1c, 0x0a, 0x0a, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1e,
	0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0x62,
	0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52,
	0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x1e,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x54, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x28, 0x01,
	0x30, 0x01, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x6f, 0x6f, 0x6e, 0x63, 0x6f, 0x72, 0x6e, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x6c, 0x69,
	0x6e, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_proto_rawDescOnce sync.Once
	file_event_proto_rawDescData = file_event_proto_rawDesc
)

func file_event_proto_rawDescGZIP() []byte {
	file_event_proto_rawDescOnce.Do(func() {
		file_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_proto_rawDescData)
	})
	return file_event_proto_rawDescData
}

var file_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_event_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_event_proto_goTypes = []interface{}{
	(EventResponse_Status)(0),     // 0: eventstream.EventResponse.Status
	(*ServerToNodeEvent)(nil),     // 1: eventstream.ServerToNodeEvent
	(*NodeToServerEvent)(nil),     // 2: eventstream.NodeToServerEvent
	(*EventResponse)(nil),         // 3: eventstream.EventResponse
	(*EventResponseUpdate)(nil),   // 4: eventstream.EventResponseUpdate
	(*EventResponseResult)(nil),   // 5: eventstream.EventResponseResult
	(*EventResponseProgress)(nil), // 6: eventstream.EventResponseProgress
	(*ShellExecute)(nil),          // 7: eventstream.ShellExecute
	(*DockerOperation)(nil),       // 8: eventstream.DockerOperation
	(*DockerRun)(nil),             // 9: eventstream.DockerRun
	(*DockerStart)(nil),           // 10: eventstream.DockerStart
	(*DockerStop)(nil),            // 11: eventstream.DockerStop
	(*DockerLogs)(nil),            // 12: eventstream.DockerLogs
	(*LogMessage)(nil),            // 13: eventstream.LogMessage
	(*structpb.Struct)(nil),       // 14: google.protobuf.Struct
}
var file_event_proto_depIdxs = []int32{
	7,  // 0: eventstream.ServerToNodeEvent.shell_execute:type_name -> eventstream.ShellExecute
	8,  // 1: eventstream.ServerToNodeEvent.docker_operation:type_name -> eventstream.DockerOperation
	13, // 2: eventstream.ServerToNodeEvent.log_message:type_name -> eventstream.LogMessage
	13, // 3: eventstream.NodeToServerEvent.log_message:type_name -> eventstream.LogMessage
	3,  // 4: eventstream.NodeToServerEvent.event_response:type_name -> eventstream.EventResponse
	0,  // 5: eventstream.EventResponse.status:type_name -> eventstream.EventResponse.Status
	4,  // 6: eventstream.EventResponse.update:type_name -> eventstream.EventResponseUpdate
	5,  // 7: eventstream.EventResponse.result:type_name -> eventstream.EventResponseResult
	14, // 8: eventstream.EventResponseUpdate.data:type_name -> google.protobuf.Struct
	14, // 9: eventstream.EventResponseResult.data:type_name -> google.protobuf.Struct
	9,  // 10: eventstream.DockerOperation.docker_run:type_name -> eventstream.DockerRun
	10, // 11: eventstream.DockerOperation.docker_start:type_name -> eventstream.DockerStart
	11, // 12: eventstream.DockerOperation.docker_stop:type_name -> eventstream.DockerStop
	12, // 13: eventstream.DockerOperation.docker_logs:type_name -> eventstream.DockerLogs
	2,  // 14: eventstream.EventService.StreamEvents:input_type -> eventstream.NodeToServerEvent
	1,  // 15: eventstream.EventService.StreamEvents:output_type -> eventstream.ServerToNodeEvent
	15, // [15:16] is the sub-list for method output_type
	14, // [14:15] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_event_proto_init() }
func file_event_proto_init() {
	if File_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerToNodeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeToServerEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventResponseUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventResponseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventResponseProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellExecute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerStop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_event_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ServerToNodeEvent_ShellExecute)(nil),
		(*ServerToNodeEvent_DockerOperation)(nil),
		(*ServerToNodeEvent_LogMessage)(nil),
	}
	file_event_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*NodeToServerEvent_LogMessage)(nil),
		(*NodeToServerEvent_EventResponse)(nil),
	}
	file_event_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*EventResponse_Update)(nil),
		(*EventResponse_Result)(nil),
	}
	file_event_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*DockerOperation_DockerRun)(nil),
		(*DockerOperation_DockerStart)(nil),
		(*DockerOperation_DockerStop)(nil),
		(*DockerOperation_DockerLogs)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_proto_goTypes,
		DependencyIndexes: file_event_proto_depIdxs,
		EnumInfos:         file_event_proto_enumTypes,
		MessageInfos:      file_event_proto_msgTypes,
	}.Build()
	File_event_proto = out.File
	file_event_proto_rawDesc = nil
	file_event_proto_goTypes = nil
	file_event_proto_depIdxs = nil
}
