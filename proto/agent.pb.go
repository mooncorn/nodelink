// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: agent.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandStreamResponse_StreamType int32

const (
	CommandStreamResponse_STDOUT CommandStreamResponse_StreamType = 0
	CommandStreamResponse_STDERR CommandStreamResponse_StreamType = 1
	CommandStreamResponse_EXIT   CommandStreamResponse_StreamType = 2
	CommandStreamResponse_ERROR  CommandStreamResponse_StreamType = 3
)

// Enum value maps for CommandStreamResponse_StreamType.
var (
	CommandStreamResponse_StreamType_name = map[int32]string{
		0: "STDOUT",
		1: "STDERR",
		2: "EXIT",
		3: "ERROR",
	}
	CommandStreamResponse_StreamType_value = map[string]int32{
		"STDOUT": 0,
		"STDERR": 1,
		"EXIT":   2,
		"ERROR":  3,
	}
)

func (x CommandStreamResponse_StreamType) Enum() *CommandStreamResponse_StreamType {
	p := new(CommandStreamResponse_StreamType)
	*p = x
	return p
}

func (x CommandStreamResponse_StreamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandStreamResponse_StreamType) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[0].Descriptor()
}

func (CommandStreamResponse_StreamType) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[0]
}

func (x CommandStreamResponse_StreamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandStreamResponse_StreamType.Descriptor instead.
func (CommandStreamResponse_StreamType) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{9, 0}
}

type MetricsStreamRequest_Action int32

const (
	MetricsStreamRequest_START           MetricsStreamRequest_Action = 0
	MetricsStreamRequest_STOP            MetricsStreamRequest_Action = 1
	MetricsStreamRequest_UPDATE_INTERVAL MetricsStreamRequest_Action = 2
)

// Enum value maps for MetricsStreamRequest_Action.
var (
	MetricsStreamRequest_Action_name = map[int32]string{
		0: "START",
		1: "STOP",
		2: "UPDATE_INTERVAL",
	}
	MetricsStreamRequest_Action_value = map[string]int32{
		"START":           0,
		"STOP":            1,
		"UPDATE_INTERVAL": 2,
	}
)

func (x MetricsStreamRequest_Action) Enum() *MetricsStreamRequest_Action {
	p := new(MetricsStreamRequest_Action)
	*p = x
	return p
}

func (x MetricsStreamRequest_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetricsStreamRequest_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[1].Descriptor()
}

func (MetricsStreamRequest_Action) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[1]
}

func (x MetricsStreamRequest_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetricsStreamRequest_Action.Descriptor instead.
func (MetricsStreamRequest_Action) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{21, 0}
}

type AgentStatus_Status int32

const (
	AgentStatus_UNKNOWN   AgentStatus_Status = 0
	AgentStatus_HEALTHY   AgentStatus_Status = 1
	AgentStatus_DEGRADED  AgentStatus_Status = 2
	AgentStatus_UNHEALTHY AgentStatus_Status = 3
	AgentStatus_OFFLINE   AgentStatus_Status = 4
)

// Enum value maps for AgentStatus_Status.
var (
	AgentStatus_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "HEALTHY",
		2: "DEGRADED",
		3: "UNHEALTHY",
		4: "OFFLINE",
	}
	AgentStatus_Status_value = map[string]int32{
		"UNKNOWN":   0,
		"HEALTHY":   1,
		"DEGRADED":  2,
		"UNHEALTHY": 3,
		"OFFLINE":   4,
	}
)

func (x AgentStatus_Status) Enum() *AgentStatus_Status {
	p := new(AgentStatus_Status)
	*p = x
	return p
}

func (x AgentStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[2].Descriptor()
}

func (AgentStatus_Status) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[2]
}

func (x AgentStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentStatus_Status.Descriptor instead.
func (AgentStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{28, 0}
}

type TaskUpdate_TaskStatus int32

const (
	TaskUpdate_PENDING   TaskUpdate_TaskStatus = 0
	TaskUpdate_RUNNING   TaskUpdate_TaskStatus = 1
	TaskUpdate_COMPLETED TaskUpdate_TaskStatus = 2
	TaskUpdate_FAILED    TaskUpdate_TaskStatus = 3
	TaskUpdate_CANCELLED TaskUpdate_TaskStatus = 4
)

// Enum value maps for TaskUpdate_TaskStatus.
var (
	TaskUpdate_TaskStatus_name = map[int32]string{
		0: "PENDING",
		1: "RUNNING",
		2: "COMPLETED",
		3: "FAILED",
		4: "CANCELLED",
	}
	TaskUpdate_TaskStatus_value = map[string]int32{
		"PENDING":   0,
		"RUNNING":   1,
		"COMPLETED": 2,
		"FAILED":    3,
		"CANCELLED": 4,
	}
)

func (x TaskUpdate_TaskStatus) Enum() *TaskUpdate_TaskStatus {
	p := new(TaskUpdate_TaskStatus)
	*p = x
	return p
}

func (x TaskUpdate_TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskUpdate_TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[3].Descriptor()
}

func (TaskUpdate_TaskStatus) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[3]
}

func (x TaskUpdate_TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskUpdate_TaskStatus.Descriptor instead.
func (TaskUpdate_TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{30, 0}
}

type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	UptimeSeconds int64                  `protobuf:"varint,2,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

func (x *Heartbeat) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Heartbeat) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

// Server messages sent to agents
type ServerMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	MessageId string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Timestamp int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Message:
	//
	//	*ServerMessage_Ping
	//	*ServerMessage_Ack
	//	*ServerMessage_ConfigUpdate
	Message       isServerMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	mi := &file_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1}
}

func (x *ServerMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ServerMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ServerMessage) GetMessage() isServerMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ServerMessage) GetPing() *PingMessage {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_Ping); ok {
			return x.Ping
		}
	}
	return nil
}

func (x *ServerMessage) GetAck() *AckMessage {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *ServerMessage) GetConfigUpdate() *ConfigUpdate {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_ConfigUpdate); ok {
			return x.ConfigUpdate
		}
	}
	return nil
}

type isServerMessage_Message interface {
	isServerMessage_Message()
}

type ServerMessage_Ping struct {
	Ping *PingMessage `protobuf:"bytes,3,opt,name=ping,proto3,oneof"`
}

type ServerMessage_Ack struct {
	Ack *AckMessage `protobuf:"bytes,4,opt,name=ack,proto3,oneof"`
}

type ServerMessage_ConfigUpdate struct {
	ConfigUpdate *ConfigUpdate `protobuf:"bytes,5,opt,name=config_update,json=configUpdate,proto3,oneof"`
}

func (*ServerMessage_Ping) isServerMessage_Message() {}

func (*ServerMessage_Ack) isServerMessage_Message() {}

func (*ServerMessage_ConfigUpdate) isServerMessage_Message() {}

type PingMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Challenge     string                 `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingMessage) Reset() {
	*x = PingMessage{}
	mi := &file_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMessage) ProtoMessage() {}

func (x *PingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMessage.ProtoReflect.Descriptor instead.
func (*PingMessage) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{2}
}

func (x *PingMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PingMessage) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

type PongMessage struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PingTimestamp     int64                  `protobuf:"varint,1,opt,name=ping_timestamp,json=pingTimestamp,proto3" json:"ping_timestamp,omitempty"`
	ChallengeResponse string                 `protobuf:"bytes,2,opt,name=challenge_response,json=challengeResponse,proto3" json:"challenge_response,omitempty"`
	PongTimestamp     int64                  `protobuf:"varint,3,opt,name=pong_timestamp,json=pongTimestamp,proto3" json:"pong_timestamp,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PongMessage) Reset() {
	*x = PongMessage{}
	mi := &file_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PongMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongMessage) ProtoMessage() {}

func (x *PongMessage) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongMessage.ProtoReflect.Descriptor instead.
func (*PongMessage) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{3}
}

func (x *PongMessage) GetPingTimestamp() int64 {
	if x != nil {
		return x.PingTimestamp
	}
	return 0
}

func (x *PongMessage) GetChallengeResponse() string {
	if x != nil {
		return x.ChallengeResponse
	}
	return ""
}

func (x *PongMessage) GetPongTimestamp() int64 {
	if x != nil {
		return x.PongTimestamp
	}
	return 0
}

type AckMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AckMessageId  string                 `protobuf:"bytes,1,opt,name=ack_message_id,json=ackMessageId,proto3" json:"ack_message_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckMessage) Reset() {
	*x = AckMessage{}
	mi := &file_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMessage) ProtoMessage() {}

func (x *AckMessage) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMessage.ProtoReflect.Descriptor instead.
func (*AckMessage) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{4}
}

func (x *AckMessage) GetAckMessageId() string {
	if x != nil {
		return x.AckMessageId
	}
	return ""
}

func (x *AckMessage) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AckMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ConfigUpdate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Settings        map[string]string      `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequiresRestart bool                   `protobuf:"varint,2,opt,name=requires_restart,json=requiresRestart,proto3" json:"requires_restart,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConfigUpdate) Reset() {
	*x = ConfigUpdate{}
	mi := &file_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdate) ProtoMessage() {}

func (x *ConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdate.ProtoReflect.Descriptor instead.
func (*ConfigUpdate) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigUpdate) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ConfigUpdate) GetRequiresRestart() bool {
	if x != nil {
		return x.RequiresRestart
	}
	return false
}

// Common metadata for all requests
type RequestMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	RequestId     string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // For correlation
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestMetadata) Reset() {
	*x = RequestMetadata{}
	mi := &file_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMetadata) ProtoMessage() {}

func (x *RequestMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMetadata.ProtoReflect.Descriptor instead.
func (*RequestMetadata) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{6}
}

func (x *RequestMetadata) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *RequestMetadata) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RequestMetadata) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *RequestMetadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// Simple command execution (immediate response)
type CommandRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Metadata         *RequestMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Command          string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Environment      map[string]string      `protobuf:"bytes,3,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	WorkingDirectory string                 `protobuf:"bytes,4,opt,name=working_directory,json=workingDirectory,proto3" json:"working_directory,omitempty"`
	TimeoutSeconds   uint32                 `protobuf:"varint,5,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CommandRequest) Reset() {
	*x = CommandRequest{}
	mi := &file_agent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequest) ProtoMessage() {}

func (x *CommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequest.ProtoReflect.Descriptor instead.
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{7}
}

func (x *CommandRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CommandRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *CommandRequest) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *CommandRequest) GetWorkingDirectory() string {
	if x != nil {
		return x.WorkingDirectory
	}
	return ""
}

func (x *CommandRequest) GetTimeoutSeconds() uint32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

type CommandResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestId       string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ExitCode        int32                  `protobuf:"varint,2,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Stdout          string                 `protobuf:"bytes,3,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr          string                 `protobuf:"bytes,4,opt,name=stderr,proto3" json:"stderr,omitempty"`
	TimedOut        bool                   `protobuf:"varint,5,opt,name=timed_out,json=timedOut,proto3" json:"timed_out,omitempty"`
	ExecutionTimeMs int64                  `protobuf:"varint,6,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CommandResponse) Reset() {
	*x = CommandResponse{}
	mi := &file_agent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResponse) ProtoMessage() {}

func (x *CommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResponse.ProtoReflect.Descriptor instead.
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{8}
}

func (x *CommandResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CommandResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *CommandResponse) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *CommandResponse) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *CommandResponse) GetTimedOut() bool {
	if x != nil {
		return x.TimedOut
	}
	return false
}

func (x *CommandResponse) GetExecutionTimeMs() int64 {
	if x != nil {
		return x.ExecutionTimeMs
	}
	return 0
}

// Streaming command execution (real-time output)
type CommandStreamResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	RequestId     string                           `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Type          CommandStreamResponse_StreamType `protobuf:"varint,2,opt,name=type,proto3,enum=pb.CommandStreamResponse_StreamType" json:"type,omitempty"`
	Data          string                           `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                          // Output chunk or error message
	ExitCode      int32                            `protobuf:"varint,4,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"` // Only set when type = EXIT
	Timestamp     int64                            `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsFinal       bool                             `protobuf:"varint,6,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandStreamResponse) Reset() {
	*x = CommandStreamResponse{}
	mi := &file_agent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandStreamResponse) ProtoMessage() {}

func (x *CommandStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandStreamResponse.ProtoReflect.Descriptor instead.
func (*CommandStreamResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{9}
}

func (x *CommandStreamResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CommandStreamResponse) GetType() CommandStreamResponse_StreamType {
	if x != nil {
		return x.Type
	}
	return CommandStreamResponse_STDOUT
}

func (x *CommandStreamResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *CommandStreamResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *CommandStreamResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CommandStreamResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

// Docker operations
type DockerRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Metadata *RequestMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Types that are valid to be assigned to Operation:
	//
	//	*DockerRequest_Run
	//	*DockerRequest_Stop
	//	*DockerRequest_Start
	//	*DockerRequest_Inspect
	Operation     isDockerRequest_Operation `protobuf_oneof:"operation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerRequest) Reset() {
	*x = DockerRequest{}
	mi := &file_agent_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerRequest) ProtoMessage() {}

func (x *DockerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerRequest.ProtoReflect.Descriptor instead.
func (*DockerRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{10}
}

func (x *DockerRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DockerRequest) GetOperation() isDockerRequest_Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *DockerRequest) GetRun() *DockerRunRequest {
	if x != nil {
		if x, ok := x.Operation.(*DockerRequest_Run); ok {
			return x.Run
		}
	}
	return nil
}

func (x *DockerRequest) GetStop() *DockerStopRequest {
	if x != nil {
		if x, ok := x.Operation.(*DockerRequest_Stop); ok {
			return x.Stop
		}
	}
	return nil
}

func (x *DockerRequest) GetStart() *DockerStartRequest {
	if x != nil {
		if x, ok := x.Operation.(*DockerRequest_Start); ok {
			return x.Start
		}
	}
	return nil
}

func (x *DockerRequest) GetInspect() *DockerInspectRequest {
	if x != nil {
		if x, ok := x.Operation.(*DockerRequest_Inspect); ok {
			return x.Inspect
		}
	}
	return nil
}

type isDockerRequest_Operation interface {
	isDockerRequest_Operation()
}

type DockerRequest_Run struct {
	Run *DockerRunRequest `protobuf:"bytes,2,opt,name=run,proto3,oneof"`
}

type DockerRequest_Stop struct {
	Stop *DockerStopRequest `protobuf:"bytes,3,opt,name=stop,proto3,oneof"`
}

type DockerRequest_Start struct {
	Start *DockerStartRequest `protobuf:"bytes,4,opt,name=start,proto3,oneof"`
}

type DockerRequest_Inspect struct {
	Inspect *DockerInspectRequest `protobuf:"bytes,5,opt,name=inspect,proto3,oneof"`
}

func (*DockerRequest_Run) isDockerRequest_Operation() {}

func (*DockerRequest_Stop) isDockerRequest_Operation() {}

func (*DockerRequest_Start) isDockerRequest_Operation() {}

func (*DockerRequest_Inspect) isDockerRequest_Operation() {}

type DockerRunRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         string                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Command       []string               `protobuf:"bytes,2,rep,name=command,proto3" json:"command,omitempty"`
	Environment   map[string]string      `protobuf:"bytes,3,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Ports         []string               `protobuf:"bytes,4,rep,name=ports,proto3" json:"ports,omitempty"`     // Format: "host:container"
	Volumes       []string               `protobuf:"bytes,5,rep,name=volumes,proto3" json:"volumes,omitempty"` // Format: "host:container"
	Name          string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerRunRequest) Reset() {
	*x = DockerRunRequest{}
	mi := &file_agent_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerRunRequest) ProtoMessage() {}

func (x *DockerRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerRunRequest.ProtoReflect.Descriptor instead.
func (*DockerRunRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{11}
}

func (x *DockerRunRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *DockerRunRequest) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *DockerRunRequest) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *DockerRunRequest) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *DockerRunRequest) GetVolumes() []string {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *DockerRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DockerStopRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContainerId    string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	TimeoutSeconds uint32                 `protobuf:"varint,2,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DockerStopRequest) Reset() {
	*x = DockerStopRequest{}
	mi := &file_agent_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerStopRequest) ProtoMessage() {}

func (x *DockerStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerStopRequest.ProtoReflect.Descriptor instead.
func (*DockerStopRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{12}
}

func (x *DockerStopRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *DockerStopRequest) GetTimeoutSeconds() uint32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

type DockerStartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerStartRequest) Reset() {
	*x = DockerStartRequest{}
	mi := &file_agent_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerStartRequest) ProtoMessage() {}

func (x *DockerStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerStartRequest.ProtoReflect.Descriptor instead.
func (*DockerStartRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{13}
}

func (x *DockerStartRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type DockerInspectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerInspectRequest) Reset() {
	*x = DockerInspectRequest{}
	mi := &file_agent_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerInspectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerInspectRequest) ProtoMessage() {}

func (x *DockerInspectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerInspectRequest.ProtoReflect.Descriptor instead.
func (*DockerInspectRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{14}
}

func (x *DockerInspectRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type DockerResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	RequestId string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Success   bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message   string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*DockerResponse_RunResult
	//	*DockerResponse_ContainerInfo
	Result        isDockerResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerResponse) Reset() {
	*x = DockerResponse{}
	mi := &file_agent_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerResponse) ProtoMessage() {}

func (x *DockerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerResponse.ProtoReflect.Descriptor instead.
func (*DockerResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{15}
}

func (x *DockerResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DockerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DockerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DockerResponse) GetResult() isDockerResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DockerResponse) GetRunResult() *DockerRunResult {
	if x != nil {
		if x, ok := x.Result.(*DockerResponse_RunResult); ok {
			return x.RunResult
		}
	}
	return nil
}

func (x *DockerResponse) GetContainerInfo() *DockerContainerInfo {
	if x != nil {
		if x, ok := x.Result.(*DockerResponse_ContainerInfo); ok {
			return x.ContainerInfo
		}
	}
	return nil
}

type isDockerResponse_Result interface {
	isDockerResponse_Result()
}

type DockerResponse_RunResult struct {
	RunResult *DockerRunResult `protobuf:"bytes,4,opt,name=run_result,json=runResult,proto3,oneof"`
}

type DockerResponse_ContainerInfo struct {
	ContainerInfo *DockerContainerInfo `protobuf:"bytes,5,opt,name=container_info,json=containerInfo,proto3,oneof"`
}

func (*DockerResponse_RunResult) isDockerResponse_Result() {}

func (*DockerResponse_ContainerInfo) isDockerResponse_Result() {}

type DockerRunResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ports         []string               `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerRunResult) Reset() {
	*x = DockerRunResult{}
	mi := &file_agent_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerRunResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerRunResult) ProtoMessage() {}

func (x *DockerRunResult) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerRunResult.ProtoReflect.Descriptor instead.
func (*DockerRunResult) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{16}
}

func (x *DockerRunResult) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *DockerRunResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DockerRunResult) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *DockerRunResult) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DockerContainerInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ContainerId      string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image            string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Status           string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Ports            []string               `protobuf:"bytes,5,rep,name=ports,proto3" json:"ports,omitempty"`
	CreatedTimestamp int64                  `protobuf:"varint,6,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DockerContainerInfo) Reset() {
	*x = DockerContainerInfo{}
	mi := &file_agent_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerContainerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerContainerInfo) ProtoMessage() {}

func (x *DockerContainerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerContainerInfo.ProtoReflect.Descriptor instead.
func (*DockerContainerInfo) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{17}
}

func (x *DockerContainerInfo) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *DockerContainerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DockerContainerInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *DockerContainerInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DockerContainerInfo) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *DockerContainerInfo) GetCreatedTimestamp() int64 {
	if x != nil {
		return x.CreatedTimestamp
	}
	return 0
}

// Docker logs streaming
type DockerLogsRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Metadata          *RequestMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	ContainerId       string                 `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Follow            bool                   `protobuf:"varint,3,opt,name=follow,proto3" json:"follow,omitempty"`                        // Stream new logs
	TailLines         uint32                 `protobuf:"varint,4,opt,name=tail_lines,json=tailLines,proto3" json:"tail_lines,omitempty"` // Number of recent lines to include
	IncludeTimestamps bool                   `protobuf:"varint,5,opt,name=include_timestamps,json=includeTimestamps,proto3" json:"include_timestamps,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DockerLogsRequest) Reset() {
	*x = DockerLogsRequest{}
	mi := &file_agent_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerLogsRequest) ProtoMessage() {}

func (x *DockerLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerLogsRequest.ProtoReflect.Descriptor instead.
func (*DockerLogsRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{18}
}

func (x *DockerLogsRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DockerLogsRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *DockerLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

func (x *DockerLogsRequest) GetTailLines() uint32 {
	if x != nil {
		return x.TailLines
	}
	return 0
}

func (x *DockerLogsRequest) GetIncludeTimestamps() bool {
	if x != nil {
		return x.IncludeTimestamps
	}
	return false
}

type DockerLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ContainerId   string                 `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Stream        string                 `protobuf:"bytes,3,opt,name=stream,proto3" json:"stream,omitempty"` // "stdout" or "stderr"
	Line          string                 `protobuf:"bytes,4,opt,name=line,proto3" json:"line,omitempty"`
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsFinal       bool                   `protobuf:"varint,6,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerLogsResponse) Reset() {
	*x = DockerLogsResponse{}
	mi := &file_agent_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerLogsResponse) ProtoMessage() {}

func (x *DockerLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerLogsResponse.ProtoReflect.Descriptor instead.
func (*DockerLogsResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{19}
}

func (x *DockerLogsResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DockerLogsResponse) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *DockerLogsResponse) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *DockerLogsResponse) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

func (x *DockerLogsResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DockerLogsResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

// System information (simple req/res)
type SystemInfoRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Metadata         *RequestMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	IncludeHardware  bool                   `protobuf:"varint,2,opt,name=include_hardware,json=includeHardware,proto3" json:"include_hardware,omitempty"`
	IncludeSoftware  bool                   `protobuf:"varint,3,opt,name=include_software,json=includeSoftware,proto3" json:"include_software,omitempty"`
	IncludeNetwork   bool                   `protobuf:"varint,4,opt,name=include_network,json=includeNetwork,proto3" json:"include_network,omitempty"`
	IncludeProcesses bool                   `protobuf:"varint,5,opt,name=include_processes,json=includeProcesses,proto3" json:"include_processes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SystemInfoRequest) Reset() {
	*x = SystemInfoRequest{}
	mi := &file_agent_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfoRequest) ProtoMessage() {}

func (x *SystemInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfoRequest.ProtoReflect.Descriptor instead.
func (*SystemInfoRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{20}
}

func (x *SystemInfoRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SystemInfoRequest) GetIncludeHardware() bool {
	if x != nil {
		return x.IncludeHardware
	}
	return false
}

func (x *SystemInfoRequest) GetIncludeSoftware() bool {
	if x != nil {
		return x.IncludeSoftware
	}
	return false
}

func (x *SystemInfoRequest) GetIncludeNetwork() bool {
	if x != nil {
		return x.IncludeNetwork
	}
	return false
}

func (x *SystemInfoRequest) GetIncludeProcesses() bool {
	if x != nil {
		return x.IncludeProcesses
	}
	return false
}

// Metrics streaming
type MetricsStreamRequest struct {
	state           protoimpl.MessageState      `protogen:"open.v1"`
	Metadata        *RequestMetadata            `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Action          MetricsStreamRequest_Action `protobuf:"varint,2,opt,name=action,proto3,enum=pb.MetricsStreamRequest_Action" json:"action,omitempty"`
	IntervalSeconds uint32                      `protobuf:"varint,3,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"`
	MetricTypes     []string                    `protobuf:"bytes,4,rep,name=metric_types,json=metricTypes,proto3" json:"metric_types,omitempty"`                                                // "cpu", "memory", "disk", "network"
	Filters         map[string]string           `protobuf:"bytes,5,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // e.g., "disk.device" = "/dev/sda1"
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MetricsStreamRequest) Reset() {
	*x = MetricsStreamRequest{}
	mi := &file_agent_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsStreamRequest) ProtoMessage() {}

func (x *MetricsStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsStreamRequest.ProtoReflect.Descriptor instead.
func (*MetricsStreamRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{21}
}

func (x *MetricsStreamRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MetricsStreamRequest) GetAction() MetricsStreamRequest_Action {
	if x != nil {
		return x.Action
	}
	return MetricsStreamRequest_START
}

func (x *MetricsStreamRequest) GetIntervalSeconds() uint32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

func (x *MetricsStreamRequest) GetMetricTypes() []string {
	if x != nil {
		return x.MetricTypes
	}
	return nil
}

func (x *MetricsStreamRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

type MetricsStreamResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	RequestId string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Timestamp int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Metrics:
	//
	//	*MetricsStreamResponse_Cpu
	//	*MetricsStreamResponse_Memory
	//	*MetricsStreamResponse_Disk
	//	*MetricsStreamResponse_Network
	//	*MetricsStreamResponse_Processes
	//	*MetricsStreamResponse_Load
	Metrics       isMetricsStreamResponse_Metrics `protobuf_oneof:"metrics"`
	IsFinal       bool                            `protobuf:"varint,9,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsStreamResponse) Reset() {
	*x = MetricsStreamResponse{}
	mi := &file_agent_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsStreamResponse) ProtoMessage() {}

func (x *MetricsStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsStreamResponse.ProtoReflect.Descriptor instead.
func (*MetricsStreamResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{22}
}

func (x *MetricsStreamResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *MetricsStreamResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MetricsStreamResponse) GetMetrics() isMetricsStreamResponse_Metrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *MetricsStreamResponse) GetCpu() *CpuMetrics {
	if x != nil {
		if x, ok := x.Metrics.(*MetricsStreamResponse_Cpu); ok {
			return x.Cpu
		}
	}
	return nil
}

func (x *MetricsStreamResponse) GetMemory() *MemoryMetrics {
	if x != nil {
		if x, ok := x.Metrics.(*MetricsStreamResponse_Memory); ok {
			return x.Memory
		}
	}
	return nil
}

func (x *MetricsStreamResponse) GetDisk() *DiskMetrics {
	if x != nil {
		if x, ok := x.Metrics.(*MetricsStreamResponse_Disk); ok {
			return x.Disk
		}
	}
	return nil
}

func (x *MetricsStreamResponse) GetNetwork() *NetworkMetrics {
	if x != nil {
		if x, ok := x.Metrics.(*MetricsStreamResponse_Network); ok {
			return x.Network
		}
	}
	return nil
}

func (x *MetricsStreamResponse) GetProcesses() *ProcessMetrics {
	if x != nil {
		if x, ok := x.Metrics.(*MetricsStreamResponse_Processes); ok {
			return x.Processes
		}
	}
	return nil
}

func (x *MetricsStreamResponse) GetLoad() *LoadMetrics {
	if x != nil {
		if x, ok := x.Metrics.(*MetricsStreamResponse_Load); ok {
			return x.Load
		}
	}
	return nil
}

func (x *MetricsStreamResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

type isMetricsStreamResponse_Metrics interface {
	isMetricsStreamResponse_Metrics()
}

type MetricsStreamResponse_Cpu struct {
	Cpu *CpuMetrics `protobuf:"bytes,3,opt,name=cpu,proto3,oneof"`
}

type MetricsStreamResponse_Memory struct {
	Memory *MemoryMetrics `protobuf:"bytes,4,opt,name=memory,proto3,oneof"`
}

type MetricsStreamResponse_Disk struct {
	Disk *DiskMetrics `protobuf:"bytes,5,opt,name=disk,proto3,oneof"`
}

type MetricsStreamResponse_Network struct {
	Network *NetworkMetrics `protobuf:"bytes,6,opt,name=network,proto3,oneof"`
}

type MetricsStreamResponse_Processes struct {
	Processes *ProcessMetrics `protobuf:"bytes,7,opt,name=processes,proto3,oneof"`
}

type MetricsStreamResponse_Load struct {
	Load *LoadMetrics `protobuf:"bytes,8,opt,name=load,proto3,oneof"`
}

func (*MetricsStreamResponse_Cpu) isMetricsStreamResponse_Metrics() {}

func (*MetricsStreamResponse_Memory) isMetricsStreamResponse_Metrics() {}

func (*MetricsStreamResponse_Disk) isMetricsStreamResponse_Metrics() {}

func (*MetricsStreamResponse_Network) isMetricsStreamResponse_Metrics() {}

func (*MetricsStreamResponse_Processes) isMetricsStreamResponse_Metrics() {}

func (*MetricsStreamResponse_Load) isMetricsStreamResponse_Metrics() {}

// Task cancellation
type TaskCancelRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Metadata        *RequestMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	TargetRequestId string                 `protobuf:"bytes,2,opt,name=target_request_id,json=targetRequestId,proto3" json:"target_request_id,omitempty"` // ID of request to cancel
	Reason          string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TaskCancelRequest) Reset() {
	*x = TaskCancelRequest{}
	mi := &file_agent_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCancelRequest) ProtoMessage() {}

func (x *TaskCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCancelRequest.ProtoReflect.Descriptor instead.
func (*TaskCancelRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{23}
}

func (x *TaskCancelRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskCancelRequest) GetTargetRequestId() string {
	if x != nil {
		return x.TargetRequestId
	}
	return ""
}

func (x *TaskCancelRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type TaskCancelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskCancelResponse) Reset() {
	*x = TaskCancelResponse{}
	mi := &file_agent_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCancelResponse) ProtoMessage() {}

func (x *TaskCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCancelResponse.ProtoReflect.Descriptor instead.
func (*TaskCancelResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{24}
}

func (x *TaskCancelResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *TaskCancelResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TaskCancelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Bidirectional agent management (for complex scenarios)
type AgentMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	AgentId   string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	MessageId string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Timestamp int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*AgentMessage_Heartbeat
	//	*AgentMessage_Capabilities
	//	*AgentMessage_Status
	//	*AgentMessage_TaskAssignment
	//	*AgentMessage_TaskUpdate
	//	*AgentMessage_Pong
	Payload       isAgentMessage_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentMessage) Reset() {
	*x = AgentMessage{}
	mi := &file_agent_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMessage) ProtoMessage() {}

func (x *AgentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMessage.ProtoReflect.Descriptor instead.
func (*AgentMessage) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{25}
}

func (x *AgentMessage) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AgentMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *AgentMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AgentMessage) GetPayload() isAgentMessage_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AgentMessage) GetHeartbeat() *AgentHeartbeat {
	if x != nil {
		if x, ok := x.Payload.(*AgentMessage_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *AgentMessage) GetCapabilities() *AgentCapabilities {
	if x != nil {
		if x, ok := x.Payload.(*AgentMessage_Capabilities); ok {
			return x.Capabilities
		}
	}
	return nil
}

func (x *AgentMessage) GetStatus() *AgentStatus {
	if x != nil {
		if x, ok := x.Payload.(*AgentMessage_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *AgentMessage) GetTaskAssignment() *TaskAssignment {
	if x != nil {
		if x, ok := x.Payload.(*AgentMessage_TaskAssignment); ok {
			return x.TaskAssignment
		}
	}
	return nil
}

func (x *AgentMessage) GetTaskUpdate() *TaskUpdate {
	if x != nil {
		if x, ok := x.Payload.(*AgentMessage_TaskUpdate); ok {
			return x.TaskUpdate
		}
	}
	return nil
}

func (x *AgentMessage) GetPong() *PongMessage {
	if x != nil {
		if x, ok := x.Payload.(*AgentMessage_Pong); ok {
			return x.Pong
		}
	}
	return nil
}

type isAgentMessage_Payload interface {
	isAgentMessage_Payload()
}

type AgentMessage_Heartbeat struct {
	Heartbeat *AgentHeartbeat `protobuf:"bytes,4,opt,name=heartbeat,proto3,oneof"`
}

type AgentMessage_Capabilities struct {
	Capabilities *AgentCapabilities `protobuf:"bytes,5,opt,name=capabilities,proto3,oneof"`
}

type AgentMessage_Status struct {
	Status *AgentStatus `protobuf:"bytes,6,opt,name=status,proto3,oneof"`
}

type AgentMessage_TaskAssignment struct {
	TaskAssignment *TaskAssignment `protobuf:"bytes,7,opt,name=task_assignment,json=taskAssignment,proto3,oneof"`
}

type AgentMessage_TaskUpdate struct {
	TaskUpdate *TaskUpdate `protobuf:"bytes,8,opt,name=task_update,json=taskUpdate,proto3,oneof"`
}

type AgentMessage_Pong struct {
	Pong *PongMessage `protobuf:"bytes,9,opt,name=pong,proto3,oneof"`
}

func (*AgentMessage_Heartbeat) isAgentMessage_Payload() {}

func (*AgentMessage_Capabilities) isAgentMessage_Payload() {}

func (*AgentMessage_Status) isAgentMessage_Payload() {}

func (*AgentMessage_TaskAssignment) isAgentMessage_Payload() {}

func (*AgentMessage_TaskUpdate) isAgentMessage_Payload() {}

func (*AgentMessage_Pong) isAgentMessage_Payload() {}

type AgentHeartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	UptimeSeconds int64                  `protobuf:"varint,2,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	ActiveTasks   uint32                 `protobuf:"varint,3,opt,name=active_tasks,json=activeTasks,proto3" json:"active_tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentHeartbeat) Reset() {
	*x = AgentHeartbeat{}
	mi := &file_agent_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentHeartbeat) ProtoMessage() {}

func (x *AgentHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentHeartbeat.ProtoReflect.Descriptor instead.
func (*AgentHeartbeat) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{26}
}

func (x *AgentHeartbeat) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AgentHeartbeat) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *AgentHeartbeat) GetActiveTasks() uint32 {
	if x != nil {
		return x.ActiveTasks
	}
	return 0
}

type AgentCapabilities struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SupportedCommands []string               `protobuf:"bytes,1,rep,name=supported_commands,json=supportedCommands,proto3" json:"supported_commands,omitempty"`
	DockerAvailable   bool                   `protobuf:"varint,2,opt,name=docker_available,json=dockerAvailable,proto3" json:"docker_available,omitempty"`
	MetricsAvailable  bool                   `protobuf:"varint,3,opt,name=metrics_available,json=metricsAvailable,proto3" json:"metrics_available,omitempty"`
	OsType            string                 `protobuf:"bytes,4,opt,name=os_type,json=osType,proto3" json:"os_type,omitempty"`
	Architecture      string                 `protobuf:"bytes,5,opt,name=architecture,proto3" json:"architecture,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AgentCapabilities) Reset() {
	*x = AgentCapabilities{}
	mi := &file_agent_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCapabilities) ProtoMessage() {}

func (x *AgentCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCapabilities.ProtoReflect.Descriptor instead.
func (*AgentCapabilities) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{27}
}

func (x *AgentCapabilities) GetSupportedCommands() []string {
	if x != nil {
		return x.SupportedCommands
	}
	return nil
}

func (x *AgentCapabilities) GetDockerAvailable() bool {
	if x != nil {
		return x.DockerAvailable
	}
	return false
}

func (x *AgentCapabilities) GetMetricsAvailable() bool {
	if x != nil {
		return x.MetricsAvailable
	}
	return false
}

func (x *AgentCapabilities) GetOsType() string {
	if x != nil {
		return x.OsType
	}
	return ""
}

func (x *AgentCapabilities) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

type AgentStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        AgentStatus_Status     `protobuf:"varint,1,opt,name=status,proto3,enum=pb.AgentStatus_Status" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Errors        []string               `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentStatus) Reset() {
	*x = AgentStatus{}
	mi := &file_agent_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentStatus) ProtoMessage() {}

func (x *AgentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentStatus.ProtoReflect.Descriptor instead.
func (*AgentStatus) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{28}
}

func (x *AgentStatus) GetStatus() AgentStatus_Status {
	if x != nil {
		return x.Status
	}
	return AgentStatus_UNKNOWN
}

func (x *AgentStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AgentStatus) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type TaskAssignment struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TaskId            string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskType          string                 `protobuf:"bytes,2,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`          // "command", "docker", "metrics"
	TaskPayload       []byte                 `protobuf:"bytes,3,opt,name=task_payload,json=taskPayload,proto3" json:"task_payload,omitempty"` // Serialized task-specific request
	Priority          uint32                 `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	DeadlineTimestamp int64                  `protobuf:"varint,5,opt,name=deadline_timestamp,json=deadlineTimestamp,proto3" json:"deadline_timestamp,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TaskAssignment) Reset() {
	*x = TaskAssignment{}
	mi := &file_agent_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAssignment) ProtoMessage() {}

func (x *TaskAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAssignment.ProtoReflect.Descriptor instead.
func (*TaskAssignment) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{29}
}

func (x *TaskAssignment) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskAssignment) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskAssignment) GetTaskPayload() []byte {
	if x != nil {
		return x.TaskPayload
	}
	return nil
}

func (x *TaskAssignment) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *TaskAssignment) GetDeadlineTimestamp() int64 {
	if x != nil {
		return x.DeadlineTimestamp
	}
	return 0
}

type TaskUpdate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TaskId          string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status          TaskUpdate_TaskStatus  `protobuf:"varint,2,opt,name=status,proto3,enum=pb.TaskUpdate_TaskStatus" json:"status,omitempty"`
	ProgressPercent float64                `protobuf:"fixed64,3,opt,name=progress_percent,json=progressPercent,proto3" json:"progress_percent,omitempty"`
	Message         string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	ResultPayload   []byte                 `protobuf:"bytes,5,opt,name=result_payload,json=resultPayload,proto3" json:"result_payload,omitempty"` // Serialized task-specific response
	IsFinal         bool                   `protobuf:"varint,6,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TaskUpdate) Reset() {
	*x = TaskUpdate{}
	mi := &file_agent_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskUpdate) ProtoMessage() {}

func (x *TaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskUpdate.ProtoReflect.Descriptor instead.
func (*TaskUpdate) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{30}
}

func (x *TaskUpdate) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskUpdate) GetStatus() TaskUpdate_TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskUpdate_PENDING
}

func (x *TaskUpdate) GetProgressPercent() float64 {
	if x != nil {
		return x.ProgressPercent
	}
	return 0
}

func (x *TaskUpdate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskUpdate) GetResultPayload() []byte {
	if x != nil {
		return x.ResultPayload
	}
	return nil
}

func (x *TaskUpdate) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

// System information structures
type SystemInfoResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Hardware          *SystemHardware        `protobuf:"bytes,1,opt,name=hardware,proto3" json:"hardware,omitempty"`
	Software          *SystemSoftware        `protobuf:"bytes,2,opt,name=software,proto3" json:"software,omitempty"`
	NetworkInterfaces []*NetworkInterface    `protobuf:"bytes,3,rep,name=network_interfaces,json=networkInterfaces,proto3" json:"network_interfaces,omitempty"`
	Timestamp         uint64                 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SystemInfoResponse) Reset() {
	*x = SystemInfoResponse{}
	mi := &file_agent_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemInfoResponse) ProtoMessage() {}

func (x *SystemInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemInfoResponse.ProtoReflect.Descriptor instead.
func (*SystemInfoResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{31}
}

func (x *SystemInfoResponse) GetHardware() *SystemHardware {
	if x != nil {
		return x.Hardware
	}
	return nil
}

func (x *SystemInfoResponse) GetSoftware() *SystemSoftware {
	if x != nil {
		return x.Software
	}
	return nil
}

func (x *SystemInfoResponse) GetNetworkInterfaces() []*NetworkInterface {
	if x != nil {
		return x.NetworkInterfaces
	}
	return nil
}

func (x *SystemInfoResponse) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type SystemHardware struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           *CpuInfo               `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        *MemoryInfo            `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Disks         []*DiskInfo            `protobuf:"bytes,3,rep,name=disks,proto3" json:"disks,omitempty"`
	Architecture  string                 `protobuf:"bytes,4,opt,name=architecture,proto3" json:"architecture,omitempty"`
	CoreCount     uint32                 `protobuf:"varint,5,opt,name=core_count,json=coreCount,proto3" json:"core_count,omitempty"`
	ThreadCount   uint32                 `protobuf:"varint,6,opt,name=thread_count,json=threadCount,proto3" json:"thread_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemHardware) Reset() {
	*x = SystemHardware{}
	mi := &file_agent_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemHardware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemHardware) ProtoMessage() {}

func (x *SystemHardware) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemHardware.ProtoReflect.Descriptor instead.
func (*SystemHardware) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{32}
}

func (x *SystemHardware) GetCpu() *CpuInfo {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *SystemHardware) GetMemory() *MemoryInfo {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *SystemHardware) GetDisks() []*DiskInfo {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *SystemHardware) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *SystemHardware) GetCoreCount() uint32 {
	if x != nil {
		return x.CoreCount
	}
	return 0
}

func (x *SystemHardware) GetThreadCount() uint32 {
	if x != nil {
		return x.ThreadCount
	}
	return 0
}

type CpuInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Model            string                 `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Cores            uint32                 `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`
	Threads          uint32                 `protobuf:"varint,3,opt,name=threads,proto3" json:"threads,omitempty"`
	BaseFrequencyGhz float64                `protobuf:"fixed64,4,opt,name=base_frequency_ghz,json=baseFrequencyGhz,proto3" json:"base_frequency_ghz,omitempty"`
	MaxFrequencyGhz  float64                `protobuf:"fixed64,5,opt,name=max_frequency_ghz,json=maxFrequencyGhz,proto3" json:"max_frequency_ghz,omitempty"`
	Features         []string               `protobuf:"bytes,6,rep,name=features,proto3" json:"features,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CpuInfo) Reset() {
	*x = CpuInfo{}
	mi := &file_agent_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuInfo) ProtoMessage() {}

func (x *CpuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuInfo.ProtoReflect.Descriptor instead.
func (*CpuInfo) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{33}
}

func (x *CpuInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CpuInfo) GetCores() uint32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *CpuInfo) GetThreads() uint32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

func (x *CpuInfo) GetBaseFrequencyGhz() float64 {
	if x != nil {
		return x.BaseFrequencyGhz
	}
	return 0
}

func (x *CpuInfo) GetMaxFrequencyGhz() float64 {
	if x != nil {
		return x.MaxFrequencyGhz
	}
	return 0
}

func (x *CpuInfo) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

type MemoryInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalBytes     uint64                 `protobuf:"varint,1,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	AvailableBytes uint64                 `protobuf:"varint,2,opt,name=available_bytes,json=availableBytes,proto3" json:"available_bytes,omitempty"`
	MemoryType     string                 `protobuf:"bytes,3,opt,name=memory_type,json=memoryType,proto3" json:"memory_type,omitempty"`
	SpeedMhz       uint32                 `protobuf:"varint,4,opt,name=speed_mhz,json=speedMhz,proto3" json:"speed_mhz,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MemoryInfo) Reset() {
	*x = MemoryInfo{}
	mi := &file_agent_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryInfo) ProtoMessage() {}

func (x *MemoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryInfo.ProtoReflect.Descriptor instead.
func (*MemoryInfo) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{34}
}

func (x *MemoryInfo) GetTotalBytes() uint64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *MemoryInfo) GetAvailableBytes() uint64 {
	if x != nil {
		return x.AvailableBytes
	}
	return 0
}

func (x *MemoryInfo) GetMemoryType() string {
	if x != nil {
		return x.MemoryType
	}
	return ""
}

func (x *MemoryInfo) GetSpeedMhz() uint32 {
	if x != nil {
		return x.SpeedMhz
	}
	return 0
}

type DiskInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Device         string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	MountPoint     string                 `protobuf:"bytes,2,opt,name=mount_point,json=mountPoint,proto3" json:"mount_point,omitempty"`
	Filesystem     string                 `protobuf:"bytes,3,opt,name=filesystem,proto3" json:"filesystem,omitempty"`
	TotalBytes     uint64                 `protobuf:"varint,4,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	AvailableBytes uint64                 `protobuf:"varint,5,opt,name=available_bytes,json=availableBytes,proto3" json:"available_bytes,omitempty"`
	DiskType       string                 `protobuf:"bytes,6,opt,name=disk_type,json=diskType,proto3" json:"disk_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DiskInfo) Reset() {
	*x = DiskInfo{}
	mi := &file_agent_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskInfo) ProtoMessage() {}

func (x *DiskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskInfo.ProtoReflect.Descriptor instead.
func (*DiskInfo) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{35}
}

func (x *DiskInfo) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DiskInfo) GetMountPoint() string {
	if x != nil {
		return x.MountPoint
	}
	return ""
}

func (x *DiskInfo) GetFilesystem() string {
	if x != nil {
		return x.Filesystem
	}
	return ""
}

func (x *DiskInfo) GetTotalBytes() uint64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *DiskInfo) GetAvailableBytes() uint64 {
	if x != nil {
		return x.AvailableBytes
	}
	return 0
}

func (x *DiskInfo) GetDiskType() string {
	if x != nil {
		return x.DiskType
	}
	return ""
}

type NetworkInterface struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MacAddress    string                 `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	IpAddresses   []string               `protobuf:"bytes,3,rep,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"`
	SpeedMbps     uint64                 `protobuf:"varint,4,opt,name=speed_mbps,json=speedMbps,proto3" json:"speed_mbps,omitempty"`
	IsUp          bool                   `protobuf:"varint,5,opt,name=is_up,json=isUp,proto3" json:"is_up,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInterface) Reset() {
	*x = NetworkInterface{}
	mi := &file_agent_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterface) ProtoMessage() {}

func (x *NetworkInterface) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterface.ProtoReflect.Descriptor instead.
func (*NetworkInterface) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{36}
}

func (x *NetworkInterface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkInterface) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NetworkInterface) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

func (x *NetworkInterface) GetSpeedMbps() uint64 {
	if x != nil {
		return x.SpeedMbps
	}
	return 0
}

func (x *NetworkInterface) GetIsUp() bool {
	if x != nil {
		return x.IsUp
	}
	return false
}

type SystemSoftware struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Os            *OperatingSystem       `protobuf:"bytes,1,opt,name=os,proto3" json:"os,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	UptimeSeconds uint64                 `protobuf:"varint,3,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	Packages      []*InstalledPackage    `protobuf:"bytes,4,rep,name=packages,proto3" json:"packages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemSoftware) Reset() {
	*x = SystemSoftware{}
	mi := &file_agent_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemSoftware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemSoftware) ProtoMessage() {}

func (x *SystemSoftware) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemSoftware.ProtoReflect.Descriptor instead.
func (*SystemSoftware) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{37}
}

func (x *SystemSoftware) GetOs() *OperatingSystem {
	if x != nil {
		return x.Os
	}
	return nil
}

func (x *SystemSoftware) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *SystemSoftware) GetUptimeSeconds() uint64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *SystemSoftware) GetPackages() []*InstalledPackage {
	if x != nil {
		return x.Packages
	}
	return nil
}

type OperatingSystem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	KernelVersion string                 `protobuf:"bytes,3,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	Distribution  string                 `protobuf:"bytes,4,opt,name=distribution,proto3" json:"distribution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperatingSystem) Reset() {
	*x = OperatingSystem{}
	mi := &file_agent_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatingSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatingSystem) ProtoMessage() {}

func (x *OperatingSystem) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatingSystem.ProtoReflect.Descriptor instead.
func (*OperatingSystem) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{38}
}

func (x *OperatingSystem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OperatingSystem) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OperatingSystem) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *OperatingSystem) GetDistribution() string {
	if x != nil {
		return x.Distribution
	}
	return ""
}

type InstalledPackage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version        string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	PackageManager string                 `protobuf:"bytes,3,opt,name=package_manager,json=packageManager,proto3" json:"package_manager,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InstalledPackage) Reset() {
	*x = InstalledPackage{}
	mi := &file_agent_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstalledPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstalledPackage) ProtoMessage() {}

func (x *InstalledPackage) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstalledPackage.ProtoReflect.Descriptor instead.
func (*InstalledPackage) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{39}
}

func (x *InstalledPackage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstalledPackage) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InstalledPackage) GetPackageManager() string {
	if x != nil {
		return x.PackageManager
	}
	return ""
}

// Real-time metrics data
type MetricsDataResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Timestamp         uint64                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Cpu               *CpuMetrics            `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory            *MemoryMetrics         `protobuf:"bytes,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Disks             []*DiskMetrics         `protobuf:"bytes,4,rep,name=disks,proto3" json:"disks,omitempty"`
	NetworkInterfaces []*NetworkMetrics      `protobuf:"bytes,5,rep,name=network_interfaces,json=networkInterfaces,proto3" json:"network_interfaces,omitempty"`
	Processes         *ProcessMetrics        `protobuf:"bytes,6,opt,name=processes,proto3" json:"processes,omitempty"`
	Load              *LoadMetrics           `protobuf:"bytes,7,opt,name=load,proto3" json:"load,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MetricsDataResponse) Reset() {
	*x = MetricsDataResponse{}
	mi := &file_agent_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsDataResponse) ProtoMessage() {}

func (x *MetricsDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsDataResponse.ProtoReflect.Descriptor instead.
func (*MetricsDataResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{40}
}

func (x *MetricsDataResponse) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MetricsDataResponse) GetCpu() *CpuMetrics {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *MetricsDataResponse) GetMemory() *MemoryMetrics {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *MetricsDataResponse) GetDisks() []*DiskMetrics {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *MetricsDataResponse) GetNetworkInterfaces() []*NetworkMetrics {
	if x != nil {
		return x.NetworkInterfaces
	}
	return nil
}

func (x *MetricsDataResponse) GetProcesses() *ProcessMetrics {
	if x != nil {
		return x.Processes
	}
	return nil
}

func (x *MetricsDataResponse) GetLoad() *LoadMetrics {
	if x != nil {
		return x.Load
	}
	return nil
}

type CpuMetrics struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UsagePercent       float64                `protobuf:"fixed64,1,opt,name=usage_percent,json=usagePercent,proto3" json:"usage_percent,omitempty"`
	CoreUsage          []float64              `protobuf:"fixed64,2,rep,packed,name=core_usage,json=coreUsage,proto3" json:"core_usage,omitempty"`
	UserPercent        float64                `protobuf:"fixed64,3,opt,name=user_percent,json=userPercent,proto3" json:"user_percent,omitempty"`
	SystemPercent      float64                `protobuf:"fixed64,4,opt,name=system_percent,json=systemPercent,proto3" json:"system_percent,omitempty"`
	IdlePercent        float64                `protobuf:"fixed64,5,opt,name=idle_percent,json=idlePercent,proto3" json:"idle_percent,omitempty"`
	IowaitPercent      float64                `protobuf:"fixed64,6,opt,name=iowait_percent,json=iowaitPercent,proto3" json:"iowait_percent,omitempty"`
	TemperatureCelsius float64                `protobuf:"fixed64,7,opt,name=temperature_celsius,json=temperatureCelsius,proto3" json:"temperature_celsius,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CpuMetrics) Reset() {
	*x = CpuMetrics{}
	mi := &file_agent_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpuMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuMetrics) ProtoMessage() {}

func (x *CpuMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuMetrics.ProtoReflect.Descriptor instead.
func (*CpuMetrics) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{41}
}

func (x *CpuMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *CpuMetrics) GetCoreUsage() []float64 {
	if x != nil {
		return x.CoreUsage
	}
	return nil
}

func (x *CpuMetrics) GetUserPercent() float64 {
	if x != nil {
		return x.UserPercent
	}
	return 0
}

func (x *CpuMetrics) GetSystemPercent() float64 {
	if x != nil {
		return x.SystemPercent
	}
	return 0
}

func (x *CpuMetrics) GetIdlePercent() float64 {
	if x != nil {
		return x.IdlePercent
	}
	return 0
}

func (x *CpuMetrics) GetIowaitPercent() float64 {
	if x != nil {
		return x.IowaitPercent
	}
	return 0
}

func (x *CpuMetrics) GetTemperatureCelsius() float64 {
	if x != nil {
		return x.TemperatureCelsius
	}
	return 0
}

type MemoryMetrics struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TotalBytes       uint64                 `protobuf:"varint,1,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	UsedBytes        uint64                 `protobuf:"varint,2,opt,name=used_bytes,json=usedBytes,proto3" json:"used_bytes,omitempty"`
	AvailableBytes   uint64                 `protobuf:"varint,3,opt,name=available_bytes,json=availableBytes,proto3" json:"available_bytes,omitempty"`
	FreeBytes        uint64                 `protobuf:"varint,4,opt,name=free_bytes,json=freeBytes,proto3" json:"free_bytes,omitempty"`
	CachedBytes      uint64                 `protobuf:"varint,5,opt,name=cached_bytes,json=cachedBytes,proto3" json:"cached_bytes,omitempty"`
	BuffersBytes     uint64                 `protobuf:"varint,6,opt,name=buffers_bytes,json=buffersBytes,proto3" json:"buffers_bytes,omitempty"`
	UsagePercent     float64                `protobuf:"fixed64,7,opt,name=usage_percent,json=usagePercent,proto3" json:"usage_percent,omitempty"`
	SwapTotalBytes   uint64                 `protobuf:"varint,8,opt,name=swap_total_bytes,json=swapTotalBytes,proto3" json:"swap_total_bytes,omitempty"`
	SwapUsedBytes    uint64                 `protobuf:"varint,9,opt,name=swap_used_bytes,json=swapUsedBytes,proto3" json:"swap_used_bytes,omitempty"`
	SwapFreeBytes    uint64                 `protobuf:"varint,10,opt,name=swap_free_bytes,json=swapFreeBytes,proto3" json:"swap_free_bytes,omitempty"`
	SwapUsagePercent float64                `protobuf:"fixed64,11,opt,name=swap_usage_percent,json=swapUsagePercent,proto3" json:"swap_usage_percent,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MemoryMetrics) Reset() {
	*x = MemoryMetrics{}
	mi := &file_agent_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryMetrics) ProtoMessage() {}

func (x *MemoryMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryMetrics.ProtoReflect.Descriptor instead.
func (*MemoryMetrics) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{42}
}

func (x *MemoryMetrics) GetTotalBytes() uint64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *MemoryMetrics) GetUsedBytes() uint64 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *MemoryMetrics) GetAvailableBytes() uint64 {
	if x != nil {
		return x.AvailableBytes
	}
	return 0
}

func (x *MemoryMetrics) GetFreeBytes() uint64 {
	if x != nil {
		return x.FreeBytes
	}
	return 0
}

func (x *MemoryMetrics) GetCachedBytes() uint64 {
	if x != nil {
		return x.CachedBytes
	}
	return 0
}

func (x *MemoryMetrics) GetBuffersBytes() uint64 {
	if x != nil {
		return x.BuffersBytes
	}
	return 0
}

func (x *MemoryMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *MemoryMetrics) GetSwapTotalBytes() uint64 {
	if x != nil {
		return x.SwapTotalBytes
	}
	return 0
}

func (x *MemoryMetrics) GetSwapUsedBytes() uint64 {
	if x != nil {
		return x.SwapUsedBytes
	}
	return 0
}

func (x *MemoryMetrics) GetSwapFreeBytes() uint64 {
	if x != nil {
		return x.SwapFreeBytes
	}
	return 0
}

func (x *MemoryMetrics) GetSwapUsagePercent() float64 {
	if x != nil {
		return x.SwapUsagePercent
	}
	return 0
}

type DiskMetrics struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Device           string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	MountPoint       string                 `protobuf:"bytes,2,opt,name=mount_point,json=mountPoint,proto3" json:"mount_point,omitempty"`
	TotalBytes       uint64                 `protobuf:"varint,3,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	UsedBytes        uint64                 `protobuf:"varint,4,opt,name=used_bytes,json=usedBytes,proto3" json:"used_bytes,omitempty"`
	AvailableBytes   uint64                 `protobuf:"varint,5,opt,name=available_bytes,json=availableBytes,proto3" json:"available_bytes,omitempty"`
	UsagePercent     float64                `protobuf:"fixed64,6,opt,name=usage_percent,json=usagePercent,proto3" json:"usage_percent,omitempty"`
	ReadBytesPerSec  uint64                 `protobuf:"varint,7,opt,name=read_bytes_per_sec,json=readBytesPerSec,proto3" json:"read_bytes_per_sec,omitempty"`
	WriteBytesPerSec uint64                 `protobuf:"varint,8,opt,name=write_bytes_per_sec,json=writeBytesPerSec,proto3" json:"write_bytes_per_sec,omitempty"`
	ReadOpsPerSec    uint64                 `protobuf:"varint,9,opt,name=read_ops_per_sec,json=readOpsPerSec,proto3" json:"read_ops_per_sec,omitempty"`
	WriteOpsPerSec   uint64                 `protobuf:"varint,10,opt,name=write_ops_per_sec,json=writeOpsPerSec,proto3" json:"write_ops_per_sec,omitempty"`
	IoUtilPercent    float64                `protobuf:"fixed64,11,opt,name=io_util_percent,json=ioUtilPercent,proto3" json:"io_util_percent,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DiskMetrics) Reset() {
	*x = DiskMetrics{}
	mi := &file_agent_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskMetrics) ProtoMessage() {}

func (x *DiskMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskMetrics.ProtoReflect.Descriptor instead.
func (*DiskMetrics) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{43}
}

func (x *DiskMetrics) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DiskMetrics) GetMountPoint() string {
	if x != nil {
		return x.MountPoint
	}
	return ""
}

func (x *DiskMetrics) GetTotalBytes() uint64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *DiskMetrics) GetUsedBytes() uint64 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *DiskMetrics) GetAvailableBytes() uint64 {
	if x != nil {
		return x.AvailableBytes
	}
	return 0
}

func (x *DiskMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *DiskMetrics) GetReadBytesPerSec() uint64 {
	if x != nil {
		return x.ReadBytesPerSec
	}
	return 0
}

func (x *DiskMetrics) GetWriteBytesPerSec() uint64 {
	if x != nil {
		return x.WriteBytesPerSec
	}
	return 0
}

func (x *DiskMetrics) GetReadOpsPerSec() uint64 {
	if x != nil {
		return x.ReadOpsPerSec
	}
	return 0
}

func (x *DiskMetrics) GetWriteOpsPerSec() uint64 {
	if x != nil {
		return x.WriteOpsPerSec
	}
	return 0
}

func (x *DiskMetrics) GetIoUtilPercent() float64 {
	if x != nil {
		return x.IoUtilPercent
	}
	return 0
}

type NetworkMetrics struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Interface         string                 `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	BytesSentPerSec   uint64                 `protobuf:"varint,2,opt,name=bytes_sent_per_sec,json=bytesSentPerSec,proto3" json:"bytes_sent_per_sec,omitempty"`
	BytesRecvPerSec   uint64                 `protobuf:"varint,3,opt,name=bytes_recv_per_sec,json=bytesRecvPerSec,proto3" json:"bytes_recv_per_sec,omitempty"`
	PacketsSentPerSec uint64                 `protobuf:"varint,4,opt,name=packets_sent_per_sec,json=packetsSentPerSec,proto3" json:"packets_sent_per_sec,omitempty"`
	PacketsRecvPerSec uint64                 `protobuf:"varint,5,opt,name=packets_recv_per_sec,json=packetsRecvPerSec,proto3" json:"packets_recv_per_sec,omitempty"`
	ErrorsIn          uint64                 `protobuf:"varint,6,opt,name=errors_in,json=errorsIn,proto3" json:"errors_in,omitempty"`
	ErrorsOut         uint64                 `protobuf:"varint,7,opt,name=errors_out,json=errorsOut,proto3" json:"errors_out,omitempty"`
	DropsIn           uint64                 `protobuf:"varint,8,opt,name=drops_in,json=dropsIn,proto3" json:"drops_in,omitempty"`
	DropsOut          uint64                 `protobuf:"varint,9,opt,name=drops_out,json=dropsOut,proto3" json:"drops_out,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NetworkMetrics) Reset() {
	*x = NetworkMetrics{}
	mi := &file_agent_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkMetrics) ProtoMessage() {}

func (x *NetworkMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkMetrics.ProtoReflect.Descriptor instead.
func (*NetworkMetrics) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{44}
}

func (x *NetworkMetrics) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *NetworkMetrics) GetBytesSentPerSec() uint64 {
	if x != nil {
		return x.BytesSentPerSec
	}
	return 0
}

func (x *NetworkMetrics) GetBytesRecvPerSec() uint64 {
	if x != nil {
		return x.BytesRecvPerSec
	}
	return 0
}

func (x *NetworkMetrics) GetPacketsSentPerSec() uint64 {
	if x != nil {
		return x.PacketsSentPerSec
	}
	return 0
}

func (x *NetworkMetrics) GetPacketsRecvPerSec() uint64 {
	if x != nil {
		return x.PacketsRecvPerSec
	}
	return 0
}

func (x *NetworkMetrics) GetErrorsIn() uint64 {
	if x != nil {
		return x.ErrorsIn
	}
	return 0
}

func (x *NetworkMetrics) GetErrorsOut() uint64 {
	if x != nil {
		return x.ErrorsOut
	}
	return 0
}

func (x *NetworkMetrics) GetDropsIn() uint64 {
	if x != nil {
		return x.DropsIn
	}
	return 0
}

func (x *NetworkMetrics) GetDropsOut() uint64 {
	if x != nil {
		return x.DropsOut
	}
	return 0
}

type ProcessMetrics struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TotalProcesses    uint32                 `protobuf:"varint,1,opt,name=total_processes,json=totalProcesses,proto3" json:"total_processes,omitempty"`
	RunningProcesses  uint32                 `protobuf:"varint,2,opt,name=running_processes,json=runningProcesses,proto3" json:"running_processes,omitempty"`
	SleepingProcesses uint32                 `protobuf:"varint,3,opt,name=sleeping_processes,json=sleepingProcesses,proto3" json:"sleeping_processes,omitempty"`
	ZombieProcesses   uint32                 `protobuf:"varint,4,opt,name=zombie_processes,json=zombieProcesses,proto3" json:"zombie_processes,omitempty"`
	TaskProcesses     []*TaskProcessMetrics  `protobuf:"bytes,5,rep,name=task_processes,json=taskProcesses,proto3" json:"task_processes,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ProcessMetrics) Reset() {
	*x = ProcessMetrics{}
	mi := &file_agent_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMetrics) ProtoMessage() {}

func (x *ProcessMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMetrics.ProtoReflect.Descriptor instead.
func (*ProcessMetrics) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{45}
}

func (x *ProcessMetrics) GetTotalProcesses() uint32 {
	if x != nil {
		return x.TotalProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetRunningProcesses() uint32 {
	if x != nil {
		return x.RunningProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetSleepingProcesses() uint32 {
	if x != nil {
		return x.SleepingProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetZombieProcesses() uint32 {
	if x != nil {
		return x.ZombieProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetTaskProcesses() []*TaskProcessMetrics {
	if x != nil {
		return x.TaskProcesses
	}
	return nil
}

type TaskProcessMetrics struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TaskId             string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Pid                uint32                 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	CpuPercent         float64                `protobuf:"fixed64,3,opt,name=cpu_percent,json=cpuPercent,proto3" json:"cpu_percent,omitempty"`
	MemoryBytes        uint64                 `protobuf:"varint,4,opt,name=memory_bytes,json=memoryBytes,proto3" json:"memory_bytes,omitempty"`
	VirtualMemoryBytes uint64                 `protobuf:"varint,5,opt,name=virtual_memory_bytes,json=virtualMemoryBytes,proto3" json:"virtual_memory_bytes,omitempty"`
	Threads            uint32                 `protobuf:"varint,6,opt,name=threads,proto3" json:"threads,omitempty"`
	ReadBytes          uint64                 `protobuf:"varint,7,opt,name=read_bytes,json=readBytes,proto3" json:"read_bytes,omitempty"`
	WriteBytes         uint64                 `protobuf:"varint,8,opt,name=write_bytes,json=writeBytes,proto3" json:"write_bytes,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TaskProcessMetrics) Reset() {
	*x = TaskProcessMetrics{}
	mi := &file_agent_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskProcessMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskProcessMetrics) ProtoMessage() {}

func (x *TaskProcessMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskProcessMetrics.ProtoReflect.Descriptor instead.
func (*TaskProcessMetrics) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{46}
}

func (x *TaskProcessMetrics) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskProcessMetrics) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *TaskProcessMetrics) GetCpuPercent() float64 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *TaskProcessMetrics) GetMemoryBytes() uint64 {
	if x != nil {
		return x.MemoryBytes
	}
	return 0
}

func (x *TaskProcessMetrics) GetVirtualMemoryBytes() uint64 {
	if x != nil {
		return x.VirtualMemoryBytes
	}
	return 0
}

func (x *TaskProcessMetrics) GetThreads() uint32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

func (x *TaskProcessMetrics) GetReadBytes() uint64 {
	if x != nil {
		return x.ReadBytes
	}
	return 0
}

func (x *TaskProcessMetrics) GetWriteBytes() uint64 {
	if x != nil {
		return x.WriteBytes
	}
	return 0
}

type LoadMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Load1         float64                `protobuf:"fixed64,1,opt,name=load1,proto3" json:"load1,omitempty"`
	Load5         float64                `protobuf:"fixed64,2,opt,name=load5,proto3" json:"load5,omitempty"`
	Load15        float64                `protobuf:"fixed64,3,opt,name=load15,proto3" json:"load15,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadMetrics) Reset() {
	*x = LoadMetrics{}
	mi := &file_agent_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadMetrics) ProtoMessage() {}

func (x *LoadMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadMetrics.ProtoReflect.Descriptor instead.
func (*LoadMetrics) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{47}
}

func (x *LoadMetrics) GetLoad1() float64 {
	if x != nil {
		return x.Load1
	}
	return 0
}

func (x *LoadMetrics) GetLoad5() float64 {
	if x != nil {
		return x.Load5
	}
	return 0
}

func (x *LoadMetrics) GetLoad15() float64 {
	if x != nil {
		return x.Load15
	}
	return 0
}

// Historical metrics query
type MetricsQueryResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	DataPoints          []*MetricsTimePoint    `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	QueryStartTimestamp uint64                 `protobuf:"varint,2,opt,name=query_start_timestamp,json=queryStartTimestamp,proto3" json:"query_start_timestamp,omitempty"`
	QueryEndTimestamp   uint64                 `protobuf:"varint,3,opt,name=query_end_timestamp,json=queryEndTimestamp,proto3" json:"query_end_timestamp,omitempty"`
	TotalPoints         uint32                 `protobuf:"varint,4,opt,name=total_points,json=totalPoints,proto3" json:"total_points,omitempty"`
	Truncated           bool                   `protobuf:"varint,5,opt,name=truncated,proto3" json:"truncated,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MetricsQueryResponse) Reset() {
	*x = MetricsQueryResponse{}
	mi := &file_agent_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsQueryResponse) ProtoMessage() {}

func (x *MetricsQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsQueryResponse.ProtoReflect.Descriptor instead.
func (*MetricsQueryResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{48}
}

func (x *MetricsQueryResponse) GetDataPoints() []*MetricsTimePoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

func (x *MetricsQueryResponse) GetQueryStartTimestamp() uint64 {
	if x != nil {
		return x.QueryStartTimestamp
	}
	return 0
}

func (x *MetricsQueryResponse) GetQueryEndTimestamp() uint64 {
	if x != nil {
		return x.QueryEndTimestamp
	}
	return 0
}

func (x *MetricsQueryResponse) GetTotalPoints() uint32 {
	if x != nil {
		return x.TotalPoints
	}
	return 0
}

func (x *MetricsQueryResponse) GetTruncated() bool {
	if x != nil {
		return x.Truncated
	}
	return false
}

type MetricsTimePoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     uint64                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Values        map[string]float64     `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsTimePoint) Reset() {
	*x = MetricsTimePoint{}
	mi := &file_agent_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsTimePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsTimePoint) ProtoMessage() {}

func (x *MetricsTimePoint) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsTimePoint.ProtoReflect.Descriptor instead.
func (*MetricsTimePoint) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{49}
}

func (x *MetricsTimePoint) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MetricsTimePoint) GetValues() map[string]float64 {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_agent_proto protoreflect.FileDescriptor

const file_agent_proto_rawDesc = "" +
	"\n" +
	"\vagent.proto\x12\x02pb\"L\n" +
	"\tHeartbeat\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12%\n" +
	"\x0euptime_seconds\x18\x02 \x01(\x03R\ruptimeSeconds\"\xdb\x01\n" +
	"\rServerMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12%\n" +
	"\x04ping\x18\x03 \x01(\v2\x0f.pb.PingMessageH\x00R\x04ping\x12\"\n" +
	"\x03ack\x18\x04 \x01(\v2\x0e.pb.AckMessageH\x00R\x03ack\x127\n" +
	"\rconfig_update\x18\x05 \x01(\v2\x10.pb.ConfigUpdateH\x00R\fconfigUpdateB\t\n" +
	"\amessage\"I\n" +
	"\vPingMessage\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x1c\n" +
	"\tchallenge\x18\x02 \x01(\tR\tchallenge\"\x8a\x01\n" +
	"\vPongMessage\x12%\n" +
	"\x0eping_timestamp\x18\x01 \x01(\x03R\rpingTimestamp\x12-\n" +
	"\x12challenge_response\x18\x02 \x01(\tR\x11challengeResponse\x12%\n" +
	"\x0epong_timestamp\x18\x03 \x01(\x03R\rpongTimestamp\"q\n" +
	"\n" +
	"AckMessage\x12$\n" +
	"\x0eack_message_id\x18\x01 \x01(\tR\fackMessageId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"\xb2\x01\n" +
	"\fConfigUpdate\x12:\n" +
	"\bsettings\x18\x01 \x03(\v2\x1e.pb.ConfigUpdate.SettingsEntryR\bsettings\x12)\n" +
	"\x10requires_restart\x18\x02 \x01(\bR\x0frequiresRestart\x1a;\n" +
	"\rSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdd\x01\n" +
	"\x0fRequestMetadata\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x127\n" +
	"\x06labels\x18\x04 \x03(\v2\x1f.pb.RequestMetadata.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb8\x02\n" +
	"\x0eCommandRequest\x12/\n" +
	"\bmetadata\x18\x01 \x01(\v2\x13.pb.RequestMetadataR\bmetadata\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12E\n" +
	"\venvironment\x18\x03 \x03(\v2#.pb.CommandRequest.EnvironmentEntryR\venvironment\x12+\n" +
	"\x11working_directory\x18\x04 \x01(\tR\x10workingDirectory\x12'\n" +
	"\x0ftimeout_seconds\x18\x05 \x01(\rR\x0etimeoutSeconds\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc6\x01\n" +
	"\x0fCommandResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x1b\n" +
	"\texit_code\x18\x02 \x01(\x05R\bexitCode\x12\x16\n" +
	"\x06stdout\x18\x03 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x04 \x01(\tR\x06stderr\x12\x1b\n" +
	"\ttimed_out\x18\x05 \x01(\bR\btimedOut\x12*\n" +
	"\x11execution_time_ms\x18\x06 \x01(\x03R\x0fexecutionTimeMs\"\x95\x02\n" +
	"\x15CommandStreamResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x128\n" +
	"\x04type\x18\x02 \x01(\x0e2$.pb.CommandStreamResponse.StreamTypeR\x04type\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data\x12\x1b\n" +
	"\texit_code\x18\x04 \x01(\x05R\bexitCode\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12\x19\n" +
	"\bis_final\x18\x06 \x01(\bR\aisFinal\"9\n" +
	"\n" +
	"StreamType\x12\n" +
	"\n" +
	"\x06STDOUT\x10\x00\x12\n" +
	"\n" +
	"\x06STDERR\x10\x01\x12\b\n" +
	"\x04EXIT\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03\"\x8a\x02\n" +
	"\rDockerRequest\x12/\n" +
	"\bmetadata\x18\x01 \x01(\v2\x13.pb.RequestMetadataR\bmetadata\x12(\n" +
	"\x03run\x18\x02 \x01(\v2\x14.pb.DockerRunRequestH\x00R\x03run\x12+\n" +
	"\x04stop\x18\x03 \x01(\v2\x15.pb.DockerStopRequestH\x00R\x04stop\x12.\n" +
	"\x05start\x18\x04 \x01(\v2\x16.pb.DockerStartRequestH\x00R\x05start\x124\n" +
	"\ainspect\x18\x05 \x01(\v2\x18.pb.DockerInspectRequestH\x00R\ainspectB\v\n" +
	"\toperation\"\x8f\x02\n" +
	"\x10DockerRunRequest\x12\x14\n" +
	"\x05image\x18\x01 \x01(\tR\x05image\x12\x18\n" +
	"\acommand\x18\x02 \x03(\tR\acommand\x12G\n" +
	"\venvironment\x18\x03 \x03(\v2%.pb.DockerRunRequest.EnvironmentEntryR\venvironment\x12\x14\n" +
	"\x05ports\x18\x04 \x03(\tR\x05ports\x12\x18\n" +
	"\avolumes\x18\x05 \x03(\tR\avolumes\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"_\n" +
	"\x11DockerStopRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12'\n" +
	"\x0ftimeout_seconds\x18\x02 \x01(\rR\x0etimeoutSeconds\"7\n" +
	"\x12DockerStartRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"9\n" +
	"\x14DockerInspectRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"\xe5\x01\n" +
	"\x0eDockerResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x124\n" +
	"\n" +
	"run_result\x18\x04 \x01(\v2\x13.pb.DockerRunResultH\x00R\trunResult\x12@\n" +
	"\x0econtainer_info\x18\x05 \x01(\v2\x17.pb.DockerContainerInfoH\x00R\rcontainerInfoB\b\n" +
	"\x06result\"v\n" +
	"\x0fDockerRunResult\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05ports\x18\x03 \x03(\tR\x05ports\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"\xbd\x01\n" +
	"\x13DockerContainerInfo\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x14\n" +
	"\x05ports\x18\x05 \x03(\tR\x05ports\x12+\n" +
	"\x11created_timestamp\x18\x06 \x01(\x03R\x10createdTimestamp\"\xcd\x01\n" +
	"\x11DockerLogsRequest\x12/\n" +
	"\bmetadata\x18\x01 \x01(\v2\x13.pb.RequestMetadataR\bmetadata\x12!\n" +
	"\fcontainer_id\x18\x02 \x01(\tR\vcontainerId\x12\x16\n" +
	"\x06follow\x18\x03 \x01(\bR\x06follow\x12\x1d\n" +
	"\n" +
	"tail_lines\x18\x04 \x01(\rR\ttailLines\x12-\n" +
	"\x12include_timestamps\x18\x05 \x01(\bR\x11includeTimestamps\"\xbb\x01\n" +
	"\x12DockerLogsResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12!\n" +
	"\fcontainer_id\x18\x02 \x01(\tR\vcontainerId\x12\x16\n" +
	"\x06stream\x18\x03 \x01(\tR\x06stream\x12\x12\n" +
	"\x04line\x18\x04 \x01(\tR\x04line\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12\x19\n" +
	"\bis_final\x18\x06 \x01(\bR\aisFinal\"\xf0\x01\n" +
	"\x11SystemInfoRequest\x12/\n" +
	"\bmetadata\x18\x01 \x01(\v2\x13.pb.RequestMetadataR\bmetadata\x12)\n" +
	"\x10include_hardware\x18\x02 \x01(\bR\x0fincludeHardware\x12)\n" +
	"\x10include_software\x18\x03 \x01(\bR\x0fincludeSoftware\x12'\n" +
	"\x0finclude_network\x18\x04 \x01(\bR\x0eincludeNetwork\x12+\n" +
	"\x11include_processes\x18\x05 \x01(\bR\x10includeProcesses\"\xff\x02\n" +
	"\x14MetricsStreamRequest\x12/\n" +
	"\bmetadata\x18\x01 \x01(\v2\x13.pb.RequestMetadataR\bmetadata\x127\n" +
	"\x06action\x18\x02 \x01(\x0e2\x1f.pb.MetricsStreamRequest.ActionR\x06action\x12)\n" +
	"\x10interval_seconds\x18\x03 \x01(\rR\x0fintervalSeconds\x12!\n" +
	"\fmetric_types\x18\x04 \x03(\tR\vmetricTypes\x12?\n" +
	"\afilters\x18\x05 \x03(\v2%.pb.MetricsStreamRequest.FiltersEntryR\afilters\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"2\n" +
	"\x06Action\x12\t\n" +
	"\x05START\x10\x00\x12\b\n" +
	"\x04STOP\x10\x01\x12\x13\n" +
	"\x0fUPDATE_INTERVAL\x10\x02\"\xfd\x02\n" +
	"\x15MetricsStreamResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\"\n" +
	"\x03cpu\x18\x03 \x01(\v2\x0e.pb.CpuMetricsH\x00R\x03cpu\x12+\n" +
	"\x06memory\x18\x04 \x01(\v2\x11.pb.MemoryMetricsH\x00R\x06memory\x12%\n" +
	"\x04disk\x18\x05 \x01(\v2\x0f.pb.DiskMetricsH\x00R\x04disk\x12.\n" +
	"\anetwork\x18\x06 \x01(\v2\x12.pb.NetworkMetricsH\x00R\anetwork\x122\n" +
	"\tprocesses\x18\a \x01(\v2\x12.pb.ProcessMetricsH\x00R\tprocesses\x12%\n" +
	"\x04load\x18\b \x01(\v2\x0f.pb.LoadMetricsH\x00R\x04load\x12\x19\n" +
	"\bis_final\x18\t \x01(\bR\aisFinalB\t\n" +
	"\ametrics\"\x88\x01\n" +
	"\x11TaskCancelRequest\x12/\n" +
	"\bmetadata\x18\x01 \x01(\v2\x13.pb.RequestMetadataR\bmetadata\x12*\n" +
	"\x11target_request_id\x18\x02 \x01(\tR\x0ftargetRequestId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"g\n" +
	"\x12TaskCancelResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xa6\x03\n" +
	"\fAgentMessage\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x122\n" +
	"\theartbeat\x18\x04 \x01(\v2\x12.pb.AgentHeartbeatH\x00R\theartbeat\x12;\n" +
	"\fcapabilities\x18\x05 \x01(\v2\x15.pb.AgentCapabilitiesH\x00R\fcapabilities\x12)\n" +
	"\x06status\x18\x06 \x01(\v2\x0f.pb.AgentStatusH\x00R\x06status\x12=\n" +
	"\x0ftask_assignment\x18\a \x01(\v2\x12.pb.TaskAssignmentH\x00R\x0etaskAssignment\x121\n" +
	"\vtask_update\x18\b \x01(\v2\x0e.pb.TaskUpdateH\x00R\n" +
	"taskUpdate\x12%\n" +
	"\x04pong\x18\t \x01(\v2\x0f.pb.PongMessageH\x00R\x04pongB\t\n" +
	"\apayload\"t\n" +
	"\x0eAgentHeartbeat\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12%\n" +
	"\x0euptime_seconds\x18\x02 \x01(\x03R\ruptimeSeconds\x12!\n" +
	"\factive_tasks\x18\x03 \x01(\rR\vactiveTasks\"\xd7\x01\n" +
	"\x11AgentCapabilities\x12-\n" +
	"\x12supported_commands\x18\x01 \x03(\tR\x11supportedCommands\x12)\n" +
	"\x10docker_available\x18\x02 \x01(\bR\x0fdockerAvailable\x12+\n" +
	"\x11metrics_available\x18\x03 \x01(\bR\x10metricsAvailable\x12\x17\n" +
	"\aos_type\x18\x04 \x01(\tR\x06osType\x12\"\n" +
	"\farchitecture\x18\x05 \x01(\tR\farchitecture\"\xbd\x01\n" +
	"\vAgentStatus\x12.\n" +
	"\x06status\x18\x01 \x01(\x0e2\x16.pb.AgentStatus.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x16\n" +
	"\x06errors\x18\x03 \x03(\tR\x06errors\"L\n" +
	"\x06Status\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aHEALTHY\x10\x01\x12\f\n" +
	"\bDEGRADED\x10\x02\x12\r\n" +
	"\tUNHEALTHY\x10\x03\x12\v\n" +
	"\aOFFLINE\x10\x04\"\xb4\x01\n" +
	"\x0eTaskAssignment\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_type\x18\x02 \x01(\tR\btaskType\x12!\n" +
	"\ftask_payload\x18\x03 \x01(\fR\vtaskPayload\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\rR\bpriority\x12-\n" +
	"\x12deadline_timestamp\x18\x05 \x01(\x03R\x11deadlineTimestamp\"\xb1\x02\n" +
	"\n" +
	"TaskUpdate\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x121\n" +
	"\x06status\x18\x02 \x01(\x0e2\x19.pb.TaskUpdate.TaskStatusR\x06status\x12)\n" +
	"\x10progress_percent\x18\x03 \x01(\x01R\x0fprogressPercent\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12%\n" +
	"\x0eresult_payload\x18\x05 \x01(\fR\rresultPayload\x12\x19\n" +
	"\bis_final\x18\x06 \x01(\bR\aisFinal\"P\n" +
	"\n" +
	"TaskStatus\x12\v\n" +
	"\aPENDING\x10\x00\x12\v\n" +
	"\aRUNNING\x10\x01\x12\r\n" +
	"\tCOMPLETED\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x03\x12\r\n" +
	"\tCANCELLED\x10\x04\"\xd7\x01\n" +
	"\x12SystemInfoResponse\x12.\n" +
	"\bhardware\x18\x01 \x01(\v2\x12.pb.SystemHardwareR\bhardware\x12.\n" +
	"\bsoftware\x18\x02 \x01(\v2\x12.pb.SystemSoftwareR\bsoftware\x12C\n" +
	"\x12network_interfaces\x18\x03 \x03(\v2\x14.pb.NetworkInterfaceR\x11networkInterfaces\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x04R\ttimestamp\"\xe1\x01\n" +
	"\x0eSystemHardware\x12\x1d\n" +
	"\x03cpu\x18\x01 \x01(\v2\v.pb.CpuInfoR\x03cpu\x12&\n" +
	"\x06memory\x18\x02 \x01(\v2\x0e.pb.MemoryInfoR\x06memory\x12\"\n" +
	"\x05disks\x18\x03 \x03(\v2\f.pb.DiskInfoR\x05disks\x12\"\n" +
	"\farchitecture\x18\x04 \x01(\tR\farchitecture\x12\x1d\n" +
	"\n" +
	"core_count\x18\x05 \x01(\rR\tcoreCount\x12!\n" +
	"\fthread_count\x18\x06 \x01(\rR\vthreadCount\"\xc5\x01\n" +
	"\aCpuInfo\x12\x14\n" +
	"\x05model\x18\x01 \x01(\tR\x05model\x12\x14\n" +
	"\x05cores\x18\x02 \x01(\rR\x05cores\x12\x18\n" +
	"\athreads\x18\x03 \x01(\rR\athreads\x12,\n" +
	"\x12base_frequency_ghz\x18\x04 \x01(\x01R\x10baseFrequencyGhz\x12*\n" +
	"\x11max_frequency_ghz\x18\x05 \x01(\x01R\x0fmaxFrequencyGhz\x12\x1a\n" +
	"\bfeatures\x18\x06 \x03(\tR\bfeatures\"\x94\x01\n" +
	"\n" +
	"MemoryInfo\x12\x1f\n" +
	"\vtotal_bytes\x18\x01 \x01(\x04R\n" +
	"totalBytes\x12'\n" +
	"\x0favailable_bytes\x18\x02 \x01(\x04R\x0eavailableBytes\x12\x1f\n" +
	"\vmemory_type\x18\x03 \x01(\tR\n" +
	"memoryType\x12\x1b\n" +
	"\tspeed_mhz\x18\x04 \x01(\rR\bspeedMhz\"\xca\x01\n" +
	"\bDiskInfo\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12\x1f\n" +
	"\vmount_point\x18\x02 \x01(\tR\n" +
	"mountPoint\x12\x1e\n" +
	"\n" +
	"filesystem\x18\x03 \x01(\tR\n" +
	"filesystem\x12\x1f\n" +
	"\vtotal_bytes\x18\x04 \x01(\x04R\n" +
	"totalBytes\x12'\n" +
	"\x0favailable_bytes\x18\x05 \x01(\x04R\x0eavailableBytes\x12\x1b\n" +
	"\tdisk_type\x18\x06 \x01(\tR\bdiskType\"\x9e\x01\n" +
	"\x10NetworkInterface\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vmac_address\x18\x02 \x01(\tR\n" +
	"macAddress\x12!\n" +
	"\fip_addresses\x18\x03 \x03(\tR\vipAddresses\x12\x1d\n" +
	"\n" +
	"speed_mbps\x18\x04 \x01(\x04R\tspeedMbps\x12\x13\n" +
	"\x05is_up\x18\x05 \x01(\bR\x04isUp\"\xaa\x01\n" +
	"\x0eSystemSoftware\x12#\n" +
	"\x02os\x18\x01 \x01(\v2\x13.pb.OperatingSystemR\x02os\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12%\n" +
	"\x0euptime_seconds\x18\x03 \x01(\x04R\ruptimeSeconds\x120\n" +
	"\bpackages\x18\x04 \x03(\v2\x14.pb.InstalledPackageR\bpackages\"\x8a\x01\n" +
	"\x0fOperatingSystem\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12%\n" +
	"\x0ekernel_version\x18\x03 \x01(\tR\rkernelVersion\x12\"\n" +
	"\fdistribution\x18\x04 \x01(\tR\fdistribution\"i\n" +
	"\x10InstalledPackage\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12'\n" +
	"\x0fpackage_manager\x18\x03 \x01(\tR\x0epackageManager\"\xc1\x02\n" +
	"\x13MetricsDataResponse\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x12 \n" +
	"\x03cpu\x18\x02 \x01(\v2\x0e.pb.CpuMetricsR\x03cpu\x12)\n" +
	"\x06memory\x18\x03 \x01(\v2\x11.pb.MemoryMetricsR\x06memory\x12%\n" +
	"\x05disks\x18\x04 \x03(\v2\x0f.pb.DiskMetricsR\x05disks\x12A\n" +
	"\x12network_interfaces\x18\x05 \x03(\v2\x12.pb.NetworkMetricsR\x11networkInterfaces\x120\n" +
	"\tprocesses\x18\x06 \x01(\v2\x12.pb.ProcessMetricsR\tprocesses\x12#\n" +
	"\x04load\x18\a \x01(\v2\x0f.pb.LoadMetricsR\x04load\"\x95\x02\n" +
	"\n" +
	"CpuMetrics\x12#\n" +
	"\rusage_percent\x18\x01 \x01(\x01R\fusagePercent\x12\x1d\n" +
	"\n" +
	"core_usage\x18\x02 \x03(\x01R\tcoreUsage\x12!\n" +
	"\fuser_percent\x18\x03 \x01(\x01R\vuserPercent\x12%\n" +
	"\x0esystem_percent\x18\x04 \x01(\x01R\rsystemPercent\x12!\n" +
	"\fidle_percent\x18\x05 \x01(\x01R\vidlePercent\x12%\n" +
	"\x0eiowait_percent\x18\x06 \x01(\x01R\riowaitPercent\x12/\n" +
	"\x13temperature_celsius\x18\a \x01(\x01R\x12temperatureCelsius\"\xac\x03\n" +
	"\rMemoryMetrics\x12\x1f\n" +
	"\vtotal_bytes\x18\x01 \x01(\x04R\n" +
	"totalBytes\x12\x1d\n" +
	"\n" +
	"used_bytes\x18\x02 \x01(\x04R\tusedBytes\x12'\n" +
	"\x0favailable_bytes\x18\x03 \x01(\x04R\x0eavailableBytes\x12\x1d\n" +
	"\n" +
	"free_bytes\x18\x04 \x01(\x04R\tfreeBytes\x12!\n" +
	"\fcached_bytes\x18\x05 \x01(\x04R\vcachedBytes\x12#\n" +
	"\rbuffers_bytes\x18\x06 \x01(\x04R\fbuffersBytes\x12#\n" +
	"\rusage_percent\x18\a \x01(\x01R\fusagePercent\x12(\n" +
	"\x10swap_total_bytes\x18\b \x01(\x04R\x0eswapTotalBytes\x12&\n" +
	"\x0fswap_used_bytes\x18\t \x01(\x04R\rswapUsedBytes\x12&\n" +
	"\x0fswap_free_bytes\x18\n" +
	" \x01(\x04R\rswapFreeBytes\x12,\n" +
	"\x12swap_usage_percent\x18\v \x01(\x01R\x10swapUsagePercent\"\xac\x03\n" +
	"\vDiskMetrics\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12\x1f\n" +
	"\vmount_point\x18\x02 \x01(\tR\n" +
	"mountPoint\x12\x1f\n" +
	"\vtotal_bytes\x18\x03 \x01(\x04R\n" +
	"totalBytes\x12\x1d\n" +
	"\n" +
	"used_bytes\x18\x04 \x01(\x04R\tusedBytes\x12'\n" +
	"\x0favailable_bytes\x18\x05 \x01(\x04R\x0eavailableBytes\x12#\n" +
	"\rusage_percent\x18\x06 \x01(\x01R\fusagePercent\x12+\n" +
	"\x12read_bytes_per_sec\x18\a \x01(\x04R\x0freadBytesPerSec\x12-\n" +
	"\x13write_bytes_per_sec\x18\b \x01(\x04R\x10writeBytesPerSec\x12'\n" +
	"\x10read_ops_per_sec\x18\t \x01(\x04R\rreadOpsPerSec\x12)\n" +
	"\x11write_ops_per_sec\x18\n" +
	" \x01(\x04R\x0ewriteOpsPerSec\x12&\n" +
	"\x0fio_util_percent\x18\v \x01(\x01R\rioUtilPercent\"\xde\x02\n" +
	"\x0eNetworkMetrics\x12\x1c\n" +
	"\tinterface\x18\x01 \x01(\tR\tinterface\x12+\n" +
	"\x12bytes_sent_per_sec\x18\x02 \x01(\x04R\x0fbytesSentPerSec\x12+\n" +
	"\x12bytes_recv_per_sec\x18\x03 \x01(\x04R\x0fbytesRecvPerSec\x12/\n" +
	"\x14packets_sent_per_sec\x18\x04 \x01(\x04R\x11packetsSentPerSec\x12/\n" +
	"\x14packets_recv_per_sec\x18\x05 \x01(\x04R\x11packetsRecvPerSec\x12\x1b\n" +
	"\terrors_in\x18\x06 \x01(\x04R\berrorsIn\x12\x1d\n" +
	"\n" +
	"errors_out\x18\a \x01(\x04R\terrorsOut\x12\x19\n" +
	"\bdrops_in\x18\b \x01(\x04R\adropsIn\x12\x1b\n" +
	"\tdrops_out\x18\t \x01(\x04R\bdropsOut\"\xff\x01\n" +
	"\x0eProcessMetrics\x12'\n" +
	"\x0ftotal_processes\x18\x01 \x01(\rR\x0etotalProcesses\x12+\n" +
	"\x11running_processes\x18\x02 \x01(\rR\x10runningProcesses\x12-\n" +
	"\x12sleeping_processes\x18\x03 \x01(\rR\x11sleepingProcesses\x12)\n" +
	"\x10zombie_processes\x18\x04 \x01(\rR\x0fzombieProcesses\x12=\n" +
	"\x0etask_processes\x18\x05 \x03(\v2\x16.pb.TaskProcessMetricsR\rtaskProcesses\"\x8f\x02\n" +
	"\x12TaskProcessMetrics\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\rR\x03pid\x12\x1f\n" +
	"\vcpu_percent\x18\x03 \x01(\x01R\n" +
	"cpuPercent\x12!\n" +
	"\fmemory_bytes\x18\x04 \x01(\x04R\vmemoryBytes\x120\n" +
	"\x14virtual_memory_bytes\x18\x05 \x01(\x04R\x12virtualMemoryBytes\x12\x18\n" +
	"\athreads\x18\x06 \x01(\rR\athreads\x12\x1d\n" +
	"\n" +
	"read_bytes\x18\a \x01(\x04R\treadBytes\x12\x1f\n" +
	"\vwrite_bytes\x18\b \x01(\x04R\n" +
	"writeBytes\"Q\n" +
	"\vLoadMetrics\x12\x14\n" +
	"\x05load1\x18\x01 \x01(\x01R\x05load1\x12\x14\n" +
	"\x05load5\x18\x02 \x01(\x01R\x05load5\x12\x16\n" +
	"\x06load15\x18\x03 \x01(\x01R\x06load15\"\xf2\x01\n" +
	"\x14MetricsQueryResponse\x125\n" +
	"\vdata_points\x18\x01 \x03(\v2\x14.pb.MetricsTimePointR\n" +
	"dataPoints\x122\n" +
	"\x15query_start_timestamp\x18\x02 \x01(\x04R\x13queryStartTimestamp\x12.\n" +
	"\x13query_end_timestamp\x18\x03 \x01(\x04R\x11queryEndTimestamp\x12!\n" +
	"\ftotal_points\x18\x04 \x01(\rR\vtotalPoints\x12\x1c\n" +
	"\ttruncated\x18\x05 \x01(\bR\ttruncated\"\xa5\x01\n" +
	"\x10MetricsTimePoint\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x128\n" +
	"\x06values\x18\x02 \x03(\v2 .pb.MetricsTimePoint.ValuesEntryR\x06values\x1a9\n" +
	"\vValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x012\x88\x04\n" +
	"\fAgentService\x129\n" +
	"\x0eExecuteCommand\x12\x12.pb.CommandRequest\x1a\x13.pb.CommandResponse\x12>\n" +
	"\rGetSystemInfo\x12\x15.pb.SystemInfoRequest\x1a\x16.pb.SystemInfoResponse\x125\n" +
	"\fManageDocker\x12\x11.pb.DockerRequest\x1a\x12.pb.DockerResponse\x12;\n" +
	"\n" +
	"CancelTask\x12\x15.pb.TaskCancelRequest\x1a\x16.pb.TaskCancelResponse\x12@\n" +
	"\rStreamCommand\x12\x12.pb.CommandRequest\x1a\x19.pb.CommandStreamResponse0\x01\x12C\n" +
	"\x10StreamDockerLogs\x12\x15.pb.DockerLogsRequest\x1a\x16.pb.DockerLogsResponse0\x01\x12F\n" +
	"\rStreamMetrics\x12\x18.pb.MetricsStreamRequest\x1a\x19.pb.MetricsStreamResponse0\x01\x12:\n" +
	"\x0fHeartbeatStream\x12\x10.pb.AgentMessage\x1a\x11.pb.ServerMessage(\x010\x01B'Z%github.com/mooncorn/nodelink/proto/pbb\x06proto3"

var (
	file_agent_proto_rawDescOnce sync.Once
	file_agent_proto_rawDescData []byte
)

func file_agent_proto_rawDescGZIP() []byte {
	file_agent_proto_rawDescOnce.Do(func() {
		file_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agent_proto_rawDesc), len(file_agent_proto_rawDesc)))
	})
	return file_agent_proto_rawDescData
}

var file_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 56)
var file_agent_proto_goTypes = []any{
	(CommandStreamResponse_StreamType)(0), // 0: pb.CommandStreamResponse.StreamType
	(MetricsStreamRequest_Action)(0),      // 1: pb.MetricsStreamRequest.Action
	(AgentStatus_Status)(0),               // 2: pb.AgentStatus.Status
	(TaskUpdate_TaskStatus)(0),            // 3: pb.TaskUpdate.TaskStatus
	(*Heartbeat)(nil),                     // 4: pb.Heartbeat
	(*ServerMessage)(nil),                 // 5: pb.ServerMessage
	(*PingMessage)(nil),                   // 6: pb.PingMessage
	(*PongMessage)(nil),                   // 7: pb.PongMessage
	(*AckMessage)(nil),                    // 8: pb.AckMessage
	(*ConfigUpdate)(nil),                  // 9: pb.ConfigUpdate
	(*RequestMetadata)(nil),               // 10: pb.RequestMetadata
	(*CommandRequest)(nil),                // 11: pb.CommandRequest
	(*CommandResponse)(nil),               // 12: pb.CommandResponse
	(*CommandStreamResponse)(nil),         // 13: pb.CommandStreamResponse
	(*DockerRequest)(nil),                 // 14: pb.DockerRequest
	(*DockerRunRequest)(nil),              // 15: pb.DockerRunRequest
	(*DockerStopRequest)(nil),             // 16: pb.DockerStopRequest
	(*DockerStartRequest)(nil),            // 17: pb.DockerStartRequest
	(*DockerInspectRequest)(nil),          // 18: pb.DockerInspectRequest
	(*DockerResponse)(nil),                // 19: pb.DockerResponse
	(*DockerRunResult)(nil),               // 20: pb.DockerRunResult
	(*DockerContainerInfo)(nil),           // 21: pb.DockerContainerInfo
	(*DockerLogsRequest)(nil),             // 22: pb.DockerLogsRequest
	(*DockerLogsResponse)(nil),            // 23: pb.DockerLogsResponse
	(*SystemInfoRequest)(nil),             // 24: pb.SystemInfoRequest
	(*MetricsStreamRequest)(nil),          // 25: pb.MetricsStreamRequest
	(*MetricsStreamResponse)(nil),         // 26: pb.MetricsStreamResponse
	(*TaskCancelRequest)(nil),             // 27: pb.TaskCancelRequest
	(*TaskCancelResponse)(nil),            // 28: pb.TaskCancelResponse
	(*AgentMessage)(nil),                  // 29: pb.AgentMessage
	(*AgentHeartbeat)(nil),                // 30: pb.AgentHeartbeat
	(*AgentCapabilities)(nil),             // 31: pb.AgentCapabilities
	(*AgentStatus)(nil),                   // 32: pb.AgentStatus
	(*TaskAssignment)(nil),                // 33: pb.TaskAssignment
	(*TaskUpdate)(nil),                    // 34: pb.TaskUpdate
	(*SystemInfoResponse)(nil),            // 35: pb.SystemInfoResponse
	(*SystemHardware)(nil),                // 36: pb.SystemHardware
	(*CpuInfo)(nil),                       // 37: pb.CpuInfo
	(*MemoryInfo)(nil),                    // 38: pb.MemoryInfo
	(*DiskInfo)(nil),                      // 39: pb.DiskInfo
	(*NetworkInterface)(nil),              // 40: pb.NetworkInterface
	(*SystemSoftware)(nil),                // 41: pb.SystemSoftware
	(*OperatingSystem)(nil),               // 42: pb.OperatingSystem
	(*InstalledPackage)(nil),              // 43: pb.InstalledPackage
	(*MetricsDataResponse)(nil),           // 44: pb.MetricsDataResponse
	(*CpuMetrics)(nil),                    // 45: pb.CpuMetrics
	(*MemoryMetrics)(nil),                 // 46: pb.MemoryMetrics
	(*DiskMetrics)(nil),                   // 47: pb.DiskMetrics
	(*NetworkMetrics)(nil),                // 48: pb.NetworkMetrics
	(*ProcessMetrics)(nil),                // 49: pb.ProcessMetrics
	(*TaskProcessMetrics)(nil),            // 50: pb.TaskProcessMetrics
	(*LoadMetrics)(nil),                   // 51: pb.LoadMetrics
	(*MetricsQueryResponse)(nil),          // 52: pb.MetricsQueryResponse
	(*MetricsTimePoint)(nil),              // 53: pb.MetricsTimePoint
	nil,                                   // 54: pb.ConfigUpdate.SettingsEntry
	nil,                                   // 55: pb.RequestMetadata.LabelsEntry
	nil,                                   // 56: pb.CommandRequest.EnvironmentEntry
	nil,                                   // 57: pb.DockerRunRequest.EnvironmentEntry
	nil,                                   // 58: pb.MetricsStreamRequest.FiltersEntry
	nil,                                   // 59: pb.MetricsTimePoint.ValuesEntry
}
var file_agent_proto_depIdxs = []int32{
	6,  // 0: pb.ServerMessage.ping:type_name -> pb.PingMessage
	8,  // 1: pb.ServerMessage.ack:type_name -> pb.AckMessage
	9,  // 2: pb.ServerMessage.config_update:type_name -> pb.ConfigUpdate
	54, // 3: pb.ConfigUpdate.settings:type_name -> pb.ConfigUpdate.SettingsEntry
	55, // 4: pb.RequestMetadata.labels:type_name -> pb.RequestMetadata.LabelsEntry
	10, // 5: pb.CommandRequest.metadata:type_name -> pb.RequestMetadata
	56, // 6: pb.CommandRequest.environment:type_name -> pb.CommandRequest.EnvironmentEntry
	0,  // 7: pb.CommandStreamResponse.type:type_name -> pb.CommandStreamResponse.StreamType
	10, // 8: pb.DockerRequest.metadata:type_name -> pb.RequestMetadata
	15, // 9: pb.DockerRequest.run:type_name -> pb.DockerRunRequest
	16, // 10: pb.DockerRequest.stop:type_name -> pb.DockerStopRequest
	17, // 11: pb.DockerRequest.start:type_name -> pb.DockerStartRequest
	18, // 12: pb.DockerRequest.inspect:type_name -> pb.DockerInspectRequest
	57, // 13: pb.DockerRunRequest.environment:type_name -> pb.DockerRunRequest.EnvironmentEntry
	20, // 14: pb.DockerResponse.run_result:type_name -> pb.DockerRunResult
	21, // 15: pb.DockerResponse.container_info:type_name -> pb.DockerContainerInfo
	10, // 16: pb.DockerLogsRequest.metadata:type_name -> pb.RequestMetadata
	10, // 17: pb.SystemInfoRequest.metadata:type_name -> pb.RequestMetadata
	10, // 18: pb.MetricsStreamRequest.metadata:type_name -> pb.RequestMetadata
	1,  // 19: pb.MetricsStreamRequest.action:type_name -> pb.MetricsStreamRequest.Action
	58, // 20: pb.MetricsStreamRequest.filters:type_name -> pb.MetricsStreamRequest.FiltersEntry
	45, // 21: pb.MetricsStreamResponse.cpu:type_name -> pb.CpuMetrics
	46, // 22: pb.MetricsStreamResponse.memory:type_name -> pb.MemoryMetrics
	47, // 23: pb.MetricsStreamResponse.disk:type_name -> pb.DiskMetrics
	48, // 24: pb.MetricsStreamResponse.network:type_name -> pb.NetworkMetrics
	49, // 25: pb.MetricsStreamResponse.processes:type_name -> pb.ProcessMetrics
	51, // 26: pb.MetricsStreamResponse.load:type_name -> pb.LoadMetrics
	10, // 27: pb.TaskCancelRequest.metadata:type_name -> pb.RequestMetadata
	30, // 28: pb.AgentMessage.heartbeat:type_name -> pb.AgentHeartbeat
	31, // 29: pb.AgentMessage.capabilities:type_name -> pb.AgentCapabilities
	32, // 30: pb.AgentMessage.status:type_name -> pb.AgentStatus
	33, // 31: pb.AgentMessage.task_assignment:type_name -> pb.TaskAssignment
	34, // 32: pb.AgentMessage.task_update:type_name -> pb.TaskUpdate
	7,  // 33: pb.AgentMessage.pong:type_name -> pb.PongMessage
	2,  // 34: pb.AgentStatus.status:type_name -> pb.AgentStatus.Status
	3,  // 35: pb.TaskUpdate.status:type_name -> pb.TaskUpdate.TaskStatus
	36, // 36: pb.SystemInfoResponse.hardware:type_name -> pb.SystemHardware
	41, // 37: pb.SystemInfoResponse.software:type_name -> pb.SystemSoftware
	40, // 38: pb.SystemInfoResponse.network_interfaces:type_name -> pb.NetworkInterface
	37, // 39: pb.SystemHardware.cpu:type_name -> pb.CpuInfo
	38, // 40: pb.SystemHardware.memory:type_name -> pb.MemoryInfo
	39, // 41: pb.SystemHardware.disks:type_name -> pb.DiskInfo
	42, // 42: pb.SystemSoftware.os:type_name -> pb.OperatingSystem
	43, // 43: pb.SystemSoftware.packages:type_name -> pb.InstalledPackage
	45, // 44: pb.MetricsDataResponse.cpu:type_name -> pb.CpuMetrics
	46, // 45: pb.MetricsDataResponse.memory:type_name -> pb.MemoryMetrics
	47, // 46: pb.MetricsDataResponse.disks:type_name -> pb.DiskMetrics
	48, // 47: pb.MetricsDataResponse.network_interfaces:type_name -> pb.NetworkMetrics
	49, // 48: pb.MetricsDataResponse.processes:type_name -> pb.ProcessMetrics
	51, // 49: pb.MetricsDataResponse.load:type_name -> pb.LoadMetrics
	50, // 50: pb.ProcessMetrics.task_processes:type_name -> pb.TaskProcessMetrics
	53, // 51: pb.MetricsQueryResponse.data_points:type_name -> pb.MetricsTimePoint
	59, // 52: pb.MetricsTimePoint.values:type_name -> pb.MetricsTimePoint.ValuesEntry
	11, // 53: pb.AgentService.ExecuteCommand:input_type -> pb.CommandRequest
	24, // 54: pb.AgentService.GetSystemInfo:input_type -> pb.SystemInfoRequest
	14, // 55: pb.AgentService.ManageDocker:input_type -> pb.DockerRequest
	27, // 56: pb.AgentService.CancelTask:input_type -> pb.TaskCancelRequest
	11, // 57: pb.AgentService.StreamCommand:input_type -> pb.CommandRequest
	22, // 58: pb.AgentService.StreamDockerLogs:input_type -> pb.DockerLogsRequest
	25, // 59: pb.AgentService.StreamMetrics:input_type -> pb.MetricsStreamRequest
	29, // 60: pb.AgentService.HeartbeatStream:input_type -> pb.AgentMessage
	12, // 61: pb.AgentService.ExecuteCommand:output_type -> pb.CommandResponse
	35, // 62: pb.AgentService.GetSystemInfo:output_type -> pb.SystemInfoResponse
	19, // 63: pb.AgentService.ManageDocker:output_type -> pb.DockerResponse
	28, // 64: pb.AgentService.CancelTask:output_type -> pb.TaskCancelResponse
	13, // 65: pb.AgentService.StreamCommand:output_type -> pb.CommandStreamResponse
	23, // 66: pb.AgentService.StreamDockerLogs:output_type -> pb.DockerLogsResponse
	26, // 67: pb.AgentService.StreamMetrics:output_type -> pb.MetricsStreamResponse
	5,  // 68: pb.AgentService.HeartbeatStream:output_type -> pb.ServerMessage
	61, // [61:69] is the sub-list for method output_type
	53, // [53:61] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_agent_proto_init() }
func file_agent_proto_init() {
	if File_agent_proto != nil {
		return
	}
	file_agent_proto_msgTypes[1].OneofWrappers = []any{
		(*ServerMessage_Ping)(nil),
		(*ServerMessage_Ack)(nil),
		(*ServerMessage_ConfigUpdate)(nil),
	}
	file_agent_proto_msgTypes[10].OneofWrappers = []any{
		(*DockerRequest_Run)(nil),
		(*DockerRequest_Stop)(nil),
		(*DockerRequest_Start)(nil),
		(*DockerRequest_Inspect)(nil),
	}
	file_agent_proto_msgTypes[15].OneofWrappers = []any{
		(*DockerResponse_RunResult)(nil),
		(*DockerResponse_ContainerInfo)(nil),
	}
	file_agent_proto_msgTypes[22].OneofWrappers = []any{
		(*MetricsStreamResponse_Cpu)(nil),
		(*MetricsStreamResponse_Memory)(nil),
		(*MetricsStreamResponse_Disk)(nil),
		(*MetricsStreamResponse_Network)(nil),
		(*MetricsStreamResponse_Processes)(nil),
		(*MetricsStreamResponse_Load)(nil),
	}
	file_agent_proto_msgTypes[25].OneofWrappers = []any{
		(*AgentMessage_Heartbeat)(nil),
		(*AgentMessage_Capabilities)(nil),
		(*AgentMessage_Status)(nil),
		(*AgentMessage_TaskAssignment)(nil),
		(*AgentMessage_TaskUpdate)(nil),
		(*AgentMessage_Pong)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agent_proto_rawDesc), len(file_agent_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   56,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agent_proto_goTypes,
		DependencyIndexes: file_agent_proto_depIdxs,
		EnumInfos:         file_agent_proto_enumTypes,
		MessageInfos:      file_agent_proto_msgTypes,
	}.Build()
	File_agent_proto = out.File
	file_agent_proto_goTypes = nil
	file_agent_proto_depIdxs = nil
}
