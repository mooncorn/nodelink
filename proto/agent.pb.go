// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: agent.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskResponse_Status int32

const (
	TaskResponse_UNKNOWN     TaskResponse_Status = 0
	TaskResponse_COMPLETED   TaskResponse_Status = 1
	TaskResponse_FAILURE     TaskResponse_Status = 2
	TaskResponse_IN_PROGRESS TaskResponse_Status = 3
)

// Enum value maps for TaskResponse_Status.
var (
	TaskResponse_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "COMPLETED",
		2: "FAILURE",
		3: "IN_PROGRESS",
	}
	TaskResponse_Status_value = map[string]int32{
		"UNKNOWN":     0,
		"COMPLETED":   1,
		"FAILURE":     2,
		"IN_PROGRESS": 3,
	}
)

func (x TaskResponse_Status) Enum() *TaskResponse_Status {
	p := new(TaskResponse_Status)
	*p = x
	return p
}

func (x TaskResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[0].Descriptor()
}

func (TaskResponse_Status) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[0]
}

func (x TaskResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskResponse_Status.Descriptor instead.
func (TaskResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1, 0}
}

type TaskRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	AgentId string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	TaskId  string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Types that are valid to be assigned to Task:
	//
	//	*TaskRequest_ShellExecute
	//	*TaskRequest_DockerOperation
	//	*TaskRequest_LogMessage
	//	*TaskRequest_TaskCancel
	Task          isTaskRequest_Task `protobuf_oneof:"task"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskRequest) Reset() {
	*x = TaskRequest{}
	mi := &file_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRequest) ProtoMessage() {}

func (x *TaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRequest.ProtoReflect.Descriptor instead.
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

func (x *TaskRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *TaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskRequest) GetTask() isTaskRequest_Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskRequest) GetShellExecute() *ShellExecute {
	if x != nil {
		if x, ok := x.Task.(*TaskRequest_ShellExecute); ok {
			return x.ShellExecute
		}
	}
	return nil
}

func (x *TaskRequest) GetDockerOperation() *DockerOperation {
	if x != nil {
		if x, ok := x.Task.(*TaskRequest_DockerOperation); ok {
			return x.DockerOperation
		}
	}
	return nil
}

func (x *TaskRequest) GetLogMessage() *LogMessage {
	if x != nil {
		if x, ok := x.Task.(*TaskRequest_LogMessage); ok {
			return x.LogMessage
		}
	}
	return nil
}

func (x *TaskRequest) GetTaskCancel() *TaskCancel {
	if x != nil {
		if x, ok := x.Task.(*TaskRequest_TaskCancel); ok {
			return x.TaskCancel
		}
	}
	return nil
}

type isTaskRequest_Task interface {
	isTaskRequest_Task()
}

type TaskRequest_ShellExecute struct {
	ShellExecute *ShellExecute `protobuf:"bytes,3,opt,name=shell_execute,json=shellExecute,proto3,oneof"`
}

type TaskRequest_DockerOperation struct {
	DockerOperation *DockerOperation `protobuf:"bytes,4,opt,name=docker_operation,json=dockerOperation,proto3,oneof"`
}

type TaskRequest_LogMessage struct {
	LogMessage *LogMessage `protobuf:"bytes,5,opt,name=log_message,json=logMessage,proto3,oneof"`
}

type TaskRequest_TaskCancel struct {
	TaskCancel *TaskCancel `protobuf:"bytes,6,opt,name=task_cancel,json=taskCancel,proto3,oneof"`
}

func (*TaskRequest_ShellExecute) isTaskRequest_Task() {}

func (*TaskRequest_DockerOperation) isTaskRequest_Task() {}

func (*TaskRequest_LogMessage) isTaskRequest_Task() {}

func (*TaskRequest_TaskCancel) isTaskRequest_Task() {}

type TaskResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	AgentId   string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	TaskId    string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status    TaskResponse_Status    `protobuf:"varint,3,opt,name=status,proto3,enum=pb.TaskResponse_Status" json:"status,omitempty"`
	IsFinal   bool                   `protobuf:"varint,4,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	Cancelled bool                   `protobuf:"varint,5,opt,name=cancelled,proto3" json:"cancelled,omitempty"`
	// Types that are valid to be assigned to Response:
	//
	//	*TaskResponse_ShellExecute
	//	*TaskResponse_TaskCancel
	Response      isTaskResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResponse) Reset() {
	*x = TaskResponse{}
	mi := &file_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse) ProtoMessage() {}

func (x *TaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse.ProtoReflect.Descriptor instead.
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1}
}

func (x *TaskResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *TaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskResponse) GetStatus() TaskResponse_Status {
	if x != nil {
		return x.Status
	}
	return TaskResponse_UNKNOWN
}

func (x *TaskResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *TaskResponse) GetCancelled() bool {
	if x != nil {
		return x.Cancelled
	}
	return false
}

func (x *TaskResponse) GetResponse() isTaskResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *TaskResponse) GetShellExecute() *ShellExecuteResponse {
	if x != nil {
		if x, ok := x.Response.(*TaskResponse_ShellExecute); ok {
			return x.ShellExecute
		}
	}
	return nil
}

func (x *TaskResponse) GetTaskCancel() *TaskCancelResponse {
	if x != nil {
		if x, ok := x.Response.(*TaskResponse_TaskCancel); ok {
			return x.TaskCancel
		}
	}
	return nil
}

type isTaskResponse_Response interface {
	isTaskResponse_Response()
}

type TaskResponse_ShellExecute struct {
	ShellExecute *ShellExecuteResponse `protobuf:"bytes,6,opt,name=shell_execute,json=shellExecute,proto3,oneof"`
}

type TaskResponse_TaskCancel struct {
	TaskCancel *TaskCancelResponse `protobuf:"bytes,7,opt,name=task_cancel,json=taskCancel,proto3,oneof"`
}

func (*TaskResponse_ShellExecute) isTaskResponse_Response() {}

func (*TaskResponse_TaskCancel) isTaskResponse_Response() {}

type ShellExecute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cmd           string                 `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShellExecute) Reset() {
	*x = ShellExecute{}
	mi := &file_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShellExecute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellExecute) ProtoMessage() {}

func (x *ShellExecute) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellExecute.ProtoReflect.Descriptor instead.
func (*ShellExecute) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{2}
}

func (x *ShellExecute) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

type ShellExecuteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stdout        string                 `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`                      // stdout chunk (can be partial)
	Stderr        string                 `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`                      // stderr chunk (can be partial)
	ExitCode      int32                  `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"` // exit code (set only on final)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShellExecuteResponse) Reset() {
	*x = ShellExecuteResponse{}
	mi := &file_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShellExecuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellExecuteResponse) ProtoMessage() {}

func (x *ShellExecuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellExecuteResponse.ProtoReflect.Descriptor instead.
func (*ShellExecuteResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{3}
}

func (x *ShellExecuteResponse) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *ShellExecuteResponse) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *ShellExecuteResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type DockerOperation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Operation:
	//
	//	*DockerOperation_DockerRun
	//	*DockerOperation_DockerStart
	//	*DockerOperation_DockerStop
	//	*DockerOperation_DockerLogs
	Operation     isDockerOperation_Operation `protobuf_oneof:"operation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerOperation) Reset() {
	*x = DockerOperation{}
	mi := &file_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerOperation) ProtoMessage() {}

func (x *DockerOperation) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerOperation.ProtoReflect.Descriptor instead.
func (*DockerOperation) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{4}
}

func (x *DockerOperation) GetOperation() isDockerOperation_Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *DockerOperation) GetDockerRun() *DockerRun {
	if x != nil {
		if x, ok := x.Operation.(*DockerOperation_DockerRun); ok {
			return x.DockerRun
		}
	}
	return nil
}

func (x *DockerOperation) GetDockerStart() *DockerStart {
	if x != nil {
		if x, ok := x.Operation.(*DockerOperation_DockerStart); ok {
			return x.DockerStart
		}
	}
	return nil
}

func (x *DockerOperation) GetDockerStop() *DockerStop {
	if x != nil {
		if x, ok := x.Operation.(*DockerOperation_DockerStop); ok {
			return x.DockerStop
		}
	}
	return nil
}

func (x *DockerOperation) GetDockerLogs() *DockerLogs {
	if x != nil {
		if x, ok := x.Operation.(*DockerOperation_DockerLogs); ok {
			return x.DockerLogs
		}
	}
	return nil
}

type isDockerOperation_Operation interface {
	isDockerOperation_Operation()
}

type DockerOperation_DockerRun struct {
	DockerRun *DockerRun `protobuf:"bytes,1,opt,name=docker_run,json=dockerRun,proto3,oneof"`
}

type DockerOperation_DockerStart struct {
	DockerStart *DockerStart `protobuf:"bytes,2,opt,name=docker_start,json=dockerStart,proto3,oneof"`
}

type DockerOperation_DockerStop struct {
	DockerStop *DockerStop `protobuf:"bytes,3,opt,name=docker_stop,json=dockerStop,proto3,oneof"`
}

type DockerOperation_DockerLogs struct {
	DockerLogs *DockerLogs `protobuf:"bytes,4,opt,name=docker_logs,json=dockerLogs,proto3,oneof"`
}

func (*DockerOperation_DockerRun) isDockerOperation_Operation() {}

func (*DockerOperation_DockerStart) isDockerOperation_Operation() {}

func (*DockerOperation_DockerStop) isDockerOperation_Operation() {}

func (*DockerOperation_DockerLogs) isDockerOperation_Operation() {}

type DockerRun struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Img           string                 `protobuf:"bytes,1,opt,name=img,proto3" json:"img,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerRun) Reset() {
	*x = DockerRun{}
	mi := &file_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerRun) ProtoMessage() {}

func (x *DockerRun) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerRun.ProtoReflect.Descriptor instead.
func (*DockerRun) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{5}
}

func (x *DockerRun) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

type DockerStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerStart) Reset() {
	*x = DockerStart{}
	mi := &file_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerStart) ProtoMessage() {}

func (x *DockerStart) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerStart.ProtoReflect.Descriptor instead.
func (*DockerStart) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{6}
}

func (x *DockerStart) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DockerStop struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerStop) Reset() {
	*x = DockerStop{}
	mi := &file_agent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerStop) ProtoMessage() {}

func (x *DockerStop) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerStop.ProtoReflect.Descriptor instead.
func (*DockerStop) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{7}
}

func (x *DockerStop) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DockerLogs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerLogs) Reset() {
	*x = DockerLogs{}
	mi := &file_agent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerLogs) ProtoMessage() {}

func (x *DockerLogs) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerLogs.ProtoReflect.Descriptor instead.
func (*DockerLogs) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{8}
}

func (x *DockerLogs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type LogMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogMessage) Reset() {
	*x = LogMessage{}
	mi := &file_agent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMessage) ProtoMessage() {}

func (x *LogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMessage.ProtoReflect.Descriptor instead.
func (*LogMessage) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{9}
}

func (x *LogMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type TaskCancel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskCancel) Reset() {
	*x = TaskCancel{}
	mi := &file_agent_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCancel) ProtoMessage() {}

func (x *TaskCancel) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCancel.ProtoReflect.Descriptor instead.
func (*TaskCancel) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{10}
}

func (x *TaskCancel) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type TaskCancelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskCancelResponse) Reset() {
	*x = TaskCancelResponse{}
	mi := &file_agent_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCancelResponse) ProtoMessage() {}

func (x *TaskCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCancelResponse.ProtoReflect.Descriptor instead.
func (*TaskCancelResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{11}
}

func (x *TaskCancelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_agent_proto protoreflect.FileDescriptor

const file_agent_proto_rawDesc = "" +
	"\n" +
	"\vagent.proto\x12\x02pb\"\xaa\x02\n" +
	"\vTaskRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x127\n" +
	"\rshell_execute\x18\x03 \x01(\v2\x10.pb.ShellExecuteH\x00R\fshellExecute\x12@\n" +
	"\x10docker_operation\x18\x04 \x01(\v2\x13.pb.DockerOperationH\x00R\x0fdockerOperation\x121\n" +
	"\vlog_message\x18\x05 \x01(\v2\x0e.pb.LogMessageH\x00R\n" +
	"logMessage\x121\n" +
	"\vtask_cancel\x18\x06 \x01(\v2\x0e.pb.TaskCancelH\x00R\n" +
	"taskCancelB\x06\n" +
	"\x04task\"\xf8\x02\n" +
	"\fTaskResponse\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x12/\n" +
	"\x06status\x18\x03 \x01(\x0e2\x17.pb.TaskResponse.StatusR\x06status\x12\x19\n" +
	"\bis_final\x18\x04 \x01(\bR\aisFinal\x12\x1c\n" +
	"\tcancelled\x18\x05 \x01(\bR\tcancelled\x12?\n" +
	"\rshell_execute\x18\x06 \x01(\v2\x18.pb.ShellExecuteResponseH\x00R\fshellExecute\x129\n" +
	"\vtask_cancel\x18\a \x01(\v2\x16.pb.TaskCancelResponseH\x00R\n" +
	"taskCancel\"B\n" +
	"\x06Status\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\r\n" +
	"\tCOMPLETED\x10\x01\x12\v\n" +
	"\aFAILURE\x10\x02\x12\x0f\n" +
	"\vIN_PROGRESS\x10\x03B\n" +
	"\n" +
	"\bresponse\" \n" +
	"\fShellExecute\x12\x10\n" +
	"\x03cmd\x18\x01 \x01(\tR\x03cmd\"c\n" +
	"\x14ShellExecuteResponse\x12\x16\n" +
	"\x06stdout\x18\x01 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x02 \x01(\tR\x06stderr\x12\x1b\n" +
	"\texit_code\x18\x03 \x01(\x05R\bexitCode\"\xea\x01\n" +
	"\x0fDockerOperation\x12.\n" +
	"\n" +
	"docker_run\x18\x01 \x01(\v2\r.pb.DockerRunH\x00R\tdockerRun\x124\n" +
	"\fdocker_start\x18\x02 \x01(\v2\x0f.pb.DockerStartH\x00R\vdockerStart\x121\n" +
	"\vdocker_stop\x18\x03 \x01(\v2\x0e.pb.DockerStopH\x00R\n" +
	"dockerStop\x121\n" +
	"\vdocker_logs\x18\x04 \x01(\v2\x0e.pb.DockerLogsH\x00R\n" +
	"dockerLogsB\v\n" +
	"\toperation\"\x1d\n" +
	"\tDockerRun\x12\x10\n" +
	"\x03img\x18\x01 \x01(\tR\x03img\"\x1d\n" +
	"\vDockerStart\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1c\n" +
	"\n" +
	"DockerStop\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1c\n" +
	"\n" +
	"DockerLogs\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1e\n" +
	"\n" +
	"LogMessage\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg\"$\n" +
	"\n" +
	"TaskCancel\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\".\n" +
	"\x12TaskCancelResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2D\n" +
	"\fAgentService\x124\n" +
	"\vStreamTasks\x12\x10.pb.TaskResponse\x1a\x0f.pb.TaskRequest(\x010\x01B'Z%github.com/mooncorn/nodelink/proto/pbb\x06proto3"

var (
	file_agent_proto_rawDescOnce sync.Once
	file_agent_proto_rawDescData []byte
)

func file_agent_proto_rawDescGZIP() []byte {
	file_agent_proto_rawDescOnce.Do(func() {
		file_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agent_proto_rawDesc), len(file_agent_proto_rawDesc)))
	})
	return file_agent_proto_rawDescData
}

var file_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_agent_proto_goTypes = []any{
	(TaskResponse_Status)(0),     // 0: pb.TaskResponse.Status
	(*TaskRequest)(nil),          // 1: pb.TaskRequest
	(*TaskResponse)(nil),         // 2: pb.TaskResponse
	(*ShellExecute)(nil),         // 3: pb.ShellExecute
	(*ShellExecuteResponse)(nil), // 4: pb.ShellExecuteResponse
	(*DockerOperation)(nil),      // 5: pb.DockerOperation
	(*DockerRun)(nil),            // 6: pb.DockerRun
	(*DockerStart)(nil),          // 7: pb.DockerStart
	(*DockerStop)(nil),           // 8: pb.DockerStop
	(*DockerLogs)(nil),           // 9: pb.DockerLogs
	(*LogMessage)(nil),           // 10: pb.LogMessage
	(*TaskCancel)(nil),           // 11: pb.TaskCancel
	(*TaskCancelResponse)(nil),   // 12: pb.TaskCancelResponse
}
var file_agent_proto_depIdxs = []int32{
	3,  // 0: pb.TaskRequest.shell_execute:type_name -> pb.ShellExecute
	5,  // 1: pb.TaskRequest.docker_operation:type_name -> pb.DockerOperation
	10, // 2: pb.TaskRequest.log_message:type_name -> pb.LogMessage
	11, // 3: pb.TaskRequest.task_cancel:type_name -> pb.TaskCancel
	0,  // 4: pb.TaskResponse.status:type_name -> pb.TaskResponse.Status
	4,  // 5: pb.TaskResponse.shell_execute:type_name -> pb.ShellExecuteResponse
	12, // 6: pb.TaskResponse.task_cancel:type_name -> pb.TaskCancelResponse
	6,  // 7: pb.DockerOperation.docker_run:type_name -> pb.DockerRun
	7,  // 8: pb.DockerOperation.docker_start:type_name -> pb.DockerStart
	8,  // 9: pb.DockerOperation.docker_stop:type_name -> pb.DockerStop
	9,  // 10: pb.DockerOperation.docker_logs:type_name -> pb.DockerLogs
	2,  // 11: pb.AgentService.StreamTasks:input_type -> pb.TaskResponse
	1,  // 12: pb.AgentService.StreamTasks:output_type -> pb.TaskRequest
	12, // [12:13] is the sub-list for method output_type
	11, // [11:12] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_agent_proto_init() }
func file_agent_proto_init() {
	if File_agent_proto != nil {
		return
	}
	file_agent_proto_msgTypes[0].OneofWrappers = []any{
		(*TaskRequest_ShellExecute)(nil),
		(*TaskRequest_DockerOperation)(nil),
		(*TaskRequest_LogMessage)(nil),
		(*TaskRequest_TaskCancel)(nil),
	}
	file_agent_proto_msgTypes[1].OneofWrappers = []any{
		(*TaskResponse_ShellExecute)(nil),
		(*TaskResponse_TaskCancel)(nil),
	}
	file_agent_proto_msgTypes[4].OneofWrappers = []any{
		(*DockerOperation_DockerRun)(nil),
		(*DockerOperation_DockerStart)(nil),
		(*DockerOperation_DockerStop)(nil),
		(*DockerOperation_DockerLogs)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agent_proto_rawDesc), len(file_agent_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agent_proto_goTypes,
		DependencyIndexes: file_agent_proto_depIdxs,
		EnumInfos:         file_agent_proto_enumTypes,
		MessageInfos:      file_agent_proto_msgTypes,
	}.Build()
	File_agent_proto = out.File
	file_agent_proto_goTypes = nil
	file_agent_proto_depIdxs = nil
}
