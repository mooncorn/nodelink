syntax = "proto3";

import "google/protobuf/struct.proto";

package eventstream;

option go_package = "github.com/mooncorn/nodelink/proto/eventstream";

service EventService {
  rpc StreamEvents(stream NodeToServerEvent) returns (stream ServerToNodeEvent);
}

message ServerToNodeEvent {
  string event_id = 1;
  string agent_id = 2;
  oneof task {
    ShellExecute shell_execute = 3;
    DockerOperation docker_operation = 4;
    LogMessage log_message = 5;
  }
}

message NodeToServerEvent {
  string agent_id = 1;
  oneof event {
    LogMessage log_message = 2;
    EventResponse event_response = 3;
  }
}

message EventResponse { 
  string event_ref = 1;  // event_id from ServerToNodeEvent

  enum Status {
    UNKNOWN = 0;
    SUCCESS = 1;
    FAILURE = 2;
    IN_PROGRESS = 3;
  }
  Status status = 2;

  oneof response {
    EventResponseUpdate update = 3;
    EventResponseResult result = 4;
  }
}

message EventResponseUpdate {
  google.protobuf.Struct data = 1;
}

message EventResponseResult { // used on success and failure
  google.protobuf.Struct data = 1;
}

message EventResponseProgress {
  int32 percent = 1; // 0-100
  string detail = 2;
}

message ShellExecute {
  string cmd = 1;
}

message DockerOperation {
  oneof operation {
    DockerRun docker_run = 1;
    DockerStart docker_start = 2;
    DockerStop docker_stop = 3;
    DockerLogs docker_logs = 4;
  }
}

message DockerRun {
  string img = 1;
}

message DockerStart {
  string id = 1;
}

message DockerStop {
  string id = 1;
}

message DockerLogs {
  string id = 1;
}

message LogMessage {
  string msg = 1;
}